{
  "articles": [
    {
      "path": "about.html",
      "title": "Keyboard Shortcuts",
      "author": [],
      "contents": "\r\n\r\nContents\r\nNavigate and Execute\r\nUseful Shortcuts\r\nEditing\r\n\r\nA full list of shortcuts can be found by calling:\r\n\r\nAlt + Shift + K\r\n\r\nNavigate and Execute\r\n\r\n\r\n\r\n\r\n\r\n\r\nUseful Shortcuts\r\n\r\n\r\n\r\n\r\n\r\n\r\nEditing\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
      "last_modified": "2025-03-12T14:16:14-05:00"
    },
    {
      "path": "basics.html",
      "title": "Basics",
      "author": [],
      "contents": "\r\n\r\nContents\r\nTerminology\r\nR Studio: Tutorials\r\nBest Practices for R\r\nBase R\r\nRStudio IDE\r\n\r\nR Markdown\r\nR Markdown Tutorials\r\nrmarkdown Package\r\nrmarkdown cheatsheet\r\n\r\nR Markdown Operations\r\nitalic text\r\nbold text\r\nsuperscript2 and subscript2\r\nstrikethrough\r\nUnordered List\r\nOrdered List\r\nInserting Links\r\nBlock Quotes\r\nTables\r\nHiding Sections\r\nImport CSV\r\nView Variables\r\nPrint Output\r\nView Dependencies\r\nView Vignettes\r\nCitations\r\nLaTeX Code\r\n\r\n\r\nTerminology\r\nwebsite will link to the developer’s webpage, which generally gives a basic overview of their package.\r\narticle will link to the package’s website. It provides similar information to the vignette, but often links in a more logical sense and is more aesthetically appealing.\r\nvignette will link to a long-form guide of the package published by the developer(s) of the project that are framed around a problem that the package is designed to solve, frequently providing common usages and sample codes. You can call the vignettes for a package at any time by using this command: browseVignettes(“packagename”)\r\nreference manual will link to the developer’s comprehensive guide to their package in PDF format.\r\ncheatsheet refers to a two-page PDF reference sheet for the package, which can be helpful to download for easy reference for common commands.\r\n\r\nReturn to Top\r\n\r\nR Studio: Tutorials\r\nR Studio Tutorial focuses on the basic operations within RStudio.\r\nR Studio Formats contains various R Markdown formats available in RStudio, including interactive Notebooks, HTML documents, PDF and Word outputs, etc. as well as various templates for publishing in journals, creating presentations and websites, and more.\r\nR Packages is an ePublished book that goes over creating R packages by H. Wickham and J. Bryan.\r\nBest Practices for R\r\n\r\n\r\n\r\nFigure 1: Best Practices for R\r\n\r\n\r\n\r\nBase R\r\n\r\n\r\n\r\n\r\n\r\n\r\nFigure 2: Base R cheatsheet\r\n\r\n\r\n\r\nRStudio IDE\r\n\r\n\r\n\r\n\r\n\r\n\r\nFigure 3: RStudio cheatsheet\r\n\r\n\r\n\r\n\r\nReturn to Top\r\n\r\nR Markdown\r\nThe document format “R Markdown” was first introduced in the knitr package (Xie 2015, 2023b) in early 2012. The idea was to embed code chunks (of R or other languages) in Markdown documents. In fact, knitr supported several authoring languages from the beginning in addition to Markdown, including LaTeX, HTML, AsciiDoc, reStructuredText, and Textile. Looking back over the five years, it seems to be fair to say that Markdown has become the most popular document format, which is what we expected. The simplicity of Markdown clearly stands out among these document formats…\r\nThe rmarkdown package (Allaire, Xie, Dervieux, McPherson, et al. 2023) was first created in early 2014. During the past four years, it has steadily evolved into a relatively complete ecosystem for authoring documents, so it is a good time for us to provide a definitive guide to this ecosystem now.\r\nAt this point, there are a large number of tasks that you could do with R Markdown:\r\nCompile a single R Markdown document to a report in different formats, such as PDF, HTML, or Word.\r\nCreate notebooks in which you can directly run code chunks interactively.\r\nMake slides for presentations (HTML5, LaTeX Beamer, or PowerPoint).\r\nProduce dashboards with flexible, interactive, and attractive layouts.\r\nBuild interactive applications based on Shiny.\r\nWrite journal articles.\r\nAuthor books of multiple chapters.\r\nGenerate websites and blogs.\r\n\r\nSource: R Markdown: The Definitive Guide\r\n\r\n\r\nReturn to Top\r\n\r\nR Markdown Tutorials\r\nR Markdown Basics focuses on the capabilities of .Rmd files and how to best utilize them to their fullest extent.\r\nR Markdown Website website has a helpful overview of various functions within R Markdown files, including various lessons available for free that cover basic formatting of .Rmd files.\r\nR Markdown Articles provides links to various tutorials and cheat sheets, including the following and many more:\r\nIntroduction to R Markdown\r\nMarkdown Basics\r\nPandoc Markdown\r\nIntroduction to Interactive Documents\r\nR Markdown: The Definitive Guide is an ePublished book that provided much of the information that will be included below. It was written by Yihui Xie, J.J. Allaire, and Garrett Grolemund in 2023.\r\n\r\nReturn to Top\r\n\r\nrmarkdown Package\r\nThe rmarkdown (Rmarkdown: Dynamic Documents for r 2024) package helps you create dynamic analysis documents that combine code, rendered output (such as figures), and prose. You bring your data, code, and ideas, and R Markdown renders your content into a polished document that can be used to:\r\nDo data science interactively within the RStudio IDE,\r\nReproduce your analyses,\r\nCollaborate and share code with others, and\r\nCommunicate your results with others.\r\nR Markdown documents can be rendered to many output formats including HTML documents, PDFs, Word files, slideshows, and more, allowing you to focus on the content while R Markdown takes care of your presentation.\r\n\r\nSource:  rmarkdown\r\n\r\n\r\nrmarkdown article: learn R markdownrmarkdown article: output formats function listrmarkdown reference manual\r\nrmarkdown cheatsheet\r\n\r\n\r\n\r\n\r\n\r\n\r\nFigure 4: R Markdown Cheatsheet 2.0\r\n\r\n\r\n\r\n\r\nReturn to Top\r\n\r\nR Markdown Operations\r\nThe following formatting options are available in R studio. The relevant code chunk is included below each option.\r\nitalic text\r\n\r\n\r\n\r\n\r\nReturn to Top\r\n\r\nbold text\r\n\r\n\r\n\r\n\r\nReturn to Top\r\n\r\nsuperscript2 and subscript2\r\n\r\n\r\n\r\n\r\nReturn to Top\r\n\r\nstrikethrough\r\n\r\n\r\n\r\n\r\nReturn to Top\r\n\r\nUnordered List\r\nitem 1\r\nitem 2\r\nitem 2a\r\nitem 2b\r\n\r\n\r\n\r\n\r\n\r\nReturn to Top\r\n\r\nOrdered List\r\nitem 1\r\nitem 2\r\nitem 2a\r\nitem 2b\r\n\r\n\r\n\r\n\r\nReturn to Top\r\n\r\nInserting Links\r\nhttp://www.rstudio.com/\r\nThis is a link.\r\n\r\n\r\n\r\n\r\nReturn to Top\r\n\r\nBlock Quotes\r\n\r\nBlock Quotes\r\n\r\n\r\n\r\n\r\n\r\nReturn to Top\r\n\r\nTables\r\nRight\r\nLeft\r\nDefault\r\nCenter\r\n12\r\n12\r\n12\r\n12\r\n123\r\n123\r\n123\r\n123\r\n1\r\n1\r\n1\r\n1\r\n\r\n\r\n\r\n\r\nReturn to Top\r\n\r\nHiding Sections\r\n\r\nClick to expand\r\n\r\nThis is hidden text. It is helpful in keeping the document aesthetically\r\nappealing, while having additional information available. In the sections below,\r\nthis is the code used to hide citations for each package.\r\n\r\n\r\n\r\n\r\n\r\nThe text between the “summary” commands is what will be visible on the main page. You can edit it to include whatever you’d like to be displayed. For example, the following code will produce the drop-down immediately after it.\r\n\r\n\r\n\r\n\r\nBatfish Rule\r\n<><\r\n\r\nReturn to Top\r\n\r\nImport CSV\r\nCode:\r\n\r\n\r\n\r\nExample:\r\n\r\n\r\n\r\n\r\nReturn to Top\r\n\r\nView Variables\r\nCode:\r\n\r\n\r\n\r\nExample:\r\n\r\n\r\n\r\n\r\nReturn to Top\r\n\r\nPrint Output\r\nCode:\r\n\r\n\r\n\r\nExample:\r\n\r\n[1] 4\r\n\r\n\r\nReturn to Top\r\n\r\nView Dependencies\r\nThis is helpful when you want to know what a particular library installs with it. For example, the tidyverse package installs over a hundred packages along with it when you install it. As a result, you only need to install the tidyverse package and you will also get RColorBrewer, ggplot2, knitr and many other packages you need for basic operations within R that you would otherwise have to independently install one-by-one. It is helpful to be able to call a package and see what other packages it installed with it at a glance rather than having to independently call each library to see if it’s installed on your system.\r\nCode:\r\n\r\n\r\n\r\nExample:\r\n\r\n  [1] \"DBI\"           \"MASS\"          \"R6\"            \"RColorBrewer\" \r\n  [5] \"askpass\"       \"backports\"     \"base64enc\"     \"bit\"          \r\n  [9] \"bit64\"         \"blob\"          \"broom\"         \"bslib\"        \r\n [13] \"cachem\"        \"callr\"         \"cellranger\"    \"cli\"          \r\n [17] \"clipr\"         \"colorspace\"    \"conflicted\"    \"cpp11\"        \r\n [21] \"crayon\"        \"curl\"          \"data.table\"    \"dbplyr\"       \r\n [25] \"digest\"        \"dplyr\"         \"dtplyr\"        \"evaluate\"     \r\n [29] \"fansi\"         \"farver\"        \"fastmap\"       \"fontawesome\"  \r\n [33] \"forcats\"       \"fs\"            \"gargle\"        \"generics\"     \r\n [37] \"ggplot2\"       \"glue\"          \"googledrive\"   \"googlesheets4\"\r\n [41] \"gtable\"        \"haven\"         \"highr\"         \"hms\"          \r\n [45] \"htmltools\"     \"httr\"          \"ids\"           \"isoband\"      \r\n [49] \"jquerylib\"     \"jsonlite\"      \"knitr\"         \"labeling\"     \r\n [53] \"lifecycle\"     \"lubridate\"     \"magrittr\"      \"memoise\"      \r\n [57] \"mime\"          \"modelr\"        \"munsell\"       \"openssl\"      \r\n [61] \"pillar\"        \"pkgconfig\"     \"prettyunits\"   \"processx\"     \r\n [65] \"progress\"      \"ps\"            \"purrr\"         \"ragg\"         \r\n [69] \"rappdirs\"      \"readr\"         \"readxl\"        \"rematch\"      \r\n [73] \"rematch2\"      \"reprex\"        \"rlang\"         \"rmarkdown\"    \r\n [77] \"rstudioapi\"    \"rvest\"         \"sass\"          \"scales\"       \r\n [81] \"selectr\"       \"stringi\"       \"stringr\"       \"sys\"          \r\n [85] \"systemfonts\"   \"textshaping\"   \"tibble\"        \"tidyr\"        \r\n [89] \"tidyselect\"    \"timechange\"    \"tinytex\"       \"tzdb\"         \r\n [93] \"utf8\"          \"uuid\"          \"vctrs\"         \"viridisLite\"  \r\n [97] \"vroom\"         \"withr\"         \"xfun\"          \"xml2\"         \r\n[101] \"yaml\"         \r\n\r\n\r\nReturn to Top\r\n\r\nView Vignettes\r\nCode:\r\n\r\n\r\n\r\nExample:\r\n\r\n\r\n\r\nOutput:\r\n\r\nVignettes found by browseVignettes(“tidyverse”)Vignettes in package tidyverse- The tidy tools manifesto - HTML- Welcome to the Tidyverse - HTML\r\n\r\n\r\nReturn to Top\r\n\r\nCitations\r\nCode:\r\n\r\n\r\n\r\nExample:\r\n\r\nTo cite package 'tidyverse' in publications use:\r\n\r\n  Wickham H, Averick M, Bryan J, Chang W, McGowan LD, François\r\n  R, Grolemund G, Hayes A, Henry L, Hester J, Kuhn M, Pedersen\r\n  TL, Miller E, Bache SM, Müller K, Ooms J, Robinson D, Seidel\r\n  DP, Spinu V, Takahashi K, Vaughan D, Wilke C, Woo K, Yutani\r\n  H (2019). \"Welcome to the tidyverse.\" _Journal of Open\r\n  Source Software_, *4*(43), 1686. doi:10.21105/joss.01686\r\n  <https://doi.org/10.21105/joss.01686>.\r\n\r\nA BibTeX entry for LaTeX users is\r\n\r\n  @Article{,\r\n    title = {Welcome to the {tidyverse}},\r\n    author = {Hadley Wickham and Mara Averick and Jennifer Bryan and Winston Chang and Lucy D'Agostino McGowan and Romain François and Garrett Grolemund and Alex Hayes and Lionel Henry and Jim Hester and Max Kuhn and Thomas Lin Pedersen and Evan Miller and Stephan Milton Bache and Kirill Müller and Jeroen Ooms and David Robinson and Dana Paige Seidel and Vitalie Spinu and Kohske Takahashi and Davis Vaughan and Claus Wilke and Kara Woo and Hiroaki Yutani},\r\n    year = {2019},\r\n    journal = {Journal of Open Source Software},\r\n    volume = {4},\r\n    number = {43},\r\n    pages = {1686},\r\n    doi = {10.21105/joss.01686},\r\n  }\r\n\r\n\r\nReturn to Top\r\n\r\nLaTeX Code\r\nUpdate Dependencies\r\nIf you have trouble with exporting documents, the best place to start is by updating tinytex to be sure everything is up to date, using the following code:\r\n\r\n\r\n\r\nInstall Dependencies\r\nCode:\r\n\r\n\r\n\r\nExample:\r\n\r\n\r\n\r\n\r\nReturn to Top\r\n\r\n\r\n\r\n\r\nRmarkdown: Dynamic Documents for r. 2024. https://github.com/rstudio/rmarkdown.\r\n\r\n\r\n\r\n\r\n",
      "last_modified": "2025-03-12T14:09:00-05:00"
    },
    {
      "path": "index.html",
      "title": "Overview",
      "author": [],
      "contents": "\r\nThis site is intended to act as a reference guide for common R Studio operations, especially when working with R Markdown (.Rmd) files. It was built under R v4.4.2 by Liam M. Ward and last updated in March 2025.\r\n\r\n\r\n\r\n",
      "last_modified": "2025-03-12T14:11:00-05:00"
    },
    {
      "path": "installpack.html",
      "title": "Keyboard Shortcuts",
      "author": [],
      "contents": "\r\n\r\nContents\r\nGeneral Information\r\nLoad All Packages\r\n\r\nGeneral Information\r\nIn general,the code for installing packages is:\r\ninstall.packages(“packagename”)\r\nIf the package is not on CRAN, sometimes you can download it directly from GitHub using the remotes or devtools packages. The basic syntax for those installation methods are:\r\nremotes::install_github(“repositoryname/packagename”)\r\nand\r\ndevtools::install_github(“repositoryname/packagename”)\r\nOnce you have a package installed to your device, you should simply need to load the library using the following code:\r\nlibrary(packagename)\r\nHowever, if you’d like to load multiple libraries at once, you will need to install a package called pacman to do so. The general syntax for loading multiple libraries is:\r\npacman::p_load(packagename1, packagename2)\r\nA neat feature of pacman is that if you don’t have a package installed, but it is available on CRAN, it will download the package for you and then load it so you don’t need to do the steps individually.\r\nLoad All Packages\r\nTo load all packages described in this tutorial at once, the code below. Any packages not already installed will be downloaded and loaded using this command:\r\n\r\n\r\nif(!requireNamespace(\"pacman\", quietly=TRUE)) install.packages(\"pacman\") %>% \r\nif(!requireNamespace(\"tinytex\", quietly=TRUE)) tinytex::install_tinytex() %>% \r\npacman::p_load(tidyverse, tinytex, directlabels, esquisse, fishualize, \r\n                 geomtextpath, gganimate, ggbreak, ggbump, ggeasy, \r\n                 ggforce, gghighlight, ggiraph, ggpattern, ggraph, \r\n                 ggrepel, ggsankeyfier, ggstatsplot, ggtext, ggthemes, \r\n                 ggwordcloud, hrbrthemes, patchwork, paletteer, pbapply, \r\n                 plot3D, plotrix, shiny, showtext, BayesGrowth, \r\n                 CatDyn, FESta, fishMod, FSA, ggFishPlots,\r\n                 RFishBC, leaflet,maps,mapdata, rayshader, sf, tmap, \r\n                 EchoviewR, rticles, rmarkdown, DT, gtsummary, AICcmodavg,\r\n                 bbmle, DHARMa, emmeans, gamlss, glmmTMB, lme4, actel,\r\n                 adehabitatHR, adehabitatHS, adehabitatLT, adehabitatMA,\r\n                 amt, m2b, sftrack, SiMRiv,wildlifeDI)\r\n\r\n\r\n\r\nLet’s break down what this code is doing.\r\nThe if(!requireNamespace) command is telling your computer that if you do not already have the package pacman installed, then it should install the package using the install.packages command that follows. However, if you already have it installed, then it will not attempt to do so again.\r\nThe %>% icon is called a “pipe” operator and is part of a tidyverse dependency. Any time you see that operator, you can mentally fill in the words “and then” since that is functionally what it is telling R to do.\r\nSo the code above in human language is saying:\r\nif you don’t have pacman installed,\r\nthen install pacman. And then\r\nif you don’t have tinytex installed,\r\nthen install tinytex. And then\r\nuse the function p_load in the pacman library to load install and load all of the packages listed between the parentheses.\r\n\r\n\r\n\r\n",
      "last_modified": "2025-03-12T14:09:12-05:00"
    },
    {
      "path": "resources.html",
      "title": "Resources",
      "author": [],
      "contents": "\r\n\r\nContents\r\nBookdown Tutorials\r\nCoding\r\nColors\r\nData Analysis\r\nData Science\r\nFonts\r\nReproducible Research\r\nR Journal\r\nStatistics\r\n\r\nThere are various resources available to assist with various aspects of using RStudio effectively. Some of my favorites are listed below for easy reference, along with a short description of what they do.\r\nBookdown Tutorials\r\n\r\nThe bookdown package is an open-source R package that facilitates writing books and long-form articles/reports with R Markdown. Features include:\r\nGenerate printer-ready books and ebooks from R Markdown documents.\r\nA markup language easier to learn than LaTeX, and to write elements such as section headers, lists, quotes, figures, tables, and citations.\r\nMultiple choices of output formats: PDF, LaTeX, HTML, EPUB, and Word.\r\nPossibility of including dynamic graphics and interactive applications (HTML widgets and Shiny apps).\r\nSupport a wide range of languages: R, C/C++, Python, Fortran, Julia, Shell scripts, and SQL, etc.\r\nLaTeX equations, theorems, and proofs work for all output formats.\r\nCan be published to GitHub, bookdown.org, and any web servers.\r\nIntegrated with the RStudio IDE.\r\nOne-click publishing to https://bookdown.org.\r\n\r\nSource: bookdown\r\n\r\n\r\nAccess the bookdown library for a full list of titles or the Data Analysis, Data Science, and Statistics tabs for tutorials on those topics.\r\nCoding\r\nResource\r\nDescription\r\nBuilding an R Package\r\nBecome an R developer\r\nHtmlwidgets for R\r\nInteractive web visualizations\r\nJS Bin\r\nTest HTML code in real time\r\nMarkdown and YAML cheatsheet\r\nQuick reference for basic syntax\r\nBuild websites in R\r\nblogdown tutorial\r\nCreating a Website\r\nUse distill package to create a free website\r\nPublishing websites\r\nUse distill package to publish free website\r\nR Graphics Cookbook\r\nTutorial for creating graphics\r\nColors\r\nResource\r\nDescription\r\nTheme Demo\r\nInteractive interface to select color hexcodes\r\nColor Contrast Checker\r\nCalculates contrast ratio of text and background colors\r\nPalette Picker\r\nGenerates complementary color palettes\r\nPalette Visualizer\r\nEnsures palettes are visually attractive\r\nTrending Palettes\r\nPalettes currently popular with Coolors users\r\nColor Palette From Image\r\nChoose color palette from uploaded image\r\nColors in R\r\nFull list of available colors in R.\r\nData Analysis\r\nTitle\r\nAuthor\r\nA Guide on Data Analysis\r\nby Mike Nguyen\r\nData Analysis and Visualization for Communication Science\r\nby Morley James Weston\r\nAdvances in Necessary Condition Analysis\r\nby Jan Dul\r\nData Science\r\nTitle\r\nAuthor\r\ndbt and BigQuery: an action oriented approach\r\nby Samuel Gachuhi Ngugi\r\nIntroduction to Data Science\r\nby Hansjörg Neth\r\nFonts\r\nResource\r\nDescription\r\nChoosing Fonts\r\nThat everyone can read\r\nCoolors Fonts\r\nHundreds of free fonts\r\nGoogle Fonts\r\nMore free fonts\r\nReproducible Research\r\n\r\nThe objective of this five-day training course, co-organized by the FRB-CESAB and the GdR EcoStat, is to train young researchers in reproducibility, software development and version management tools (e.g. Git, GitHub, R Markdown, Quarto, renv, Docker), applied to biodiversity research.\r\n\r\nSource: Reproducible Research in Computational Ecology (RRiCE)\r\n\r\n\r\nResource\r\nDescription\r\nResearch Compendium slides\r\nOverview of course\r\nVersion control with Git slides\r\nBasics of Git\r\nAn introduction to Quarto slides\r\nA unified authoring framework for data science\r\nTargets slides\r\nA pipeline toolkit for R\r\nAn introduction to renv\r\nCreate reproducible environments for R projects\r\nDocker for R users\r\nA gentle introduction to containerization\r\nThe Degrees of Reproducibility with R\r\nFlowsheet of project management\r\nR Journal\r\n\r\nThe R Journal is the peer-reviewed, open-access scientific journal, published by The R Foundation. It features short to medium length articles (up to 20 pages) covering topics of interest to users and developers of R. For example, description and implementation details of R packages, surveys or reviews of R software related to a particular area, applications of R software or descriptions of teaching resources related to R.\r\n\r\nSource: R Journal\r\n\r\n\r\n**Access all available R Journal issues here**.\r\nStatistics\r\nTitle\r\nAuthor\r\nClinical Biostatistics\r\nby Leonhard Held\r\nIntroduction to Bayesian Inference and Statistical Learning\r\nby Elisabeth Bergherr\r\nProducing and Using Data in Cognitive Science\r\nby Daniel Nettle\r\nIntroduction to Regression Analysis\r\nby Siegfred Roi L. Codia\r\nIntroduction to Statistics\r\nby Lauren Perry\r\n\r\n\r\n\r\n",
      "last_modified": "2025-03-12T14:09:28-05:00"
    },
    {
      "path": "usepacks.html",
      "title": "Useful Packages",
      "author": [],
      "contents": "\r\n\r\nContents\r\nTidyverse\r\nreadr\r\ntidyr\r\ndplyr\r\ntibble\r\nstringr\r\nforcats\r\nlubridate\r\n\r\nFigures\r\ndirectlabels\r\nesquisse\r\nfishualize\r\ngeomtextpath\r\ngganimate\r\nggbreak\r\nggbump\r\nggeasy\r\nggforce\r\ngghighlight\r\nggiraph\r\nggpattern\r\nggraph\r\nggrepel\r\nggsankeyfier\r\nggstatsplot\r\nggtext\r\nggthemes\r\nggwordcloud\r\nhrbrthemes\r\npatchwork\r\npaletteer\r\npbapply\r\nplot3D\r\nplotrix\r\nshiny\r\nshowtext\r\n\r\nFisheries Packages\r\nBayesGrowth\r\nCatDyn\r\nFESta\r\nfishMod\r\nFSA\r\nggFishPlots\r\nRFishBC\r\n\r\nGeospatial Packages\r\nmaps/mapdata\r\nrayshader\r\nsf\r\ntmap\r\n\r\nMiscellaneous\r\nEchoviewR\r\nrticles\r\ntinytex\r\n\r\nStatistics\r\nAICcmodavg\r\nbbmle\r\nDHARMa\r\nemmeans\r\ngamlss\r\nglmmTMB\r\nlme4\r\n\r\nTables\r\nDT\r\ngtsummary\r\n\r\nTelemetry\r\nactel\r\nadehabitatHR\r\nadehabitatHS\r\nadehabitatLT\r\nadehabitatMA\r\namt\r\nm2b\r\nsftrack\r\nSiMRiv\r\nwildlifeDI\r\n\r\n\r\nThere are a variety of helpful packages which are briefly listed below, along with links to documentation, tutorials, cheatsheets, and other potentially helpful resources to help you learn how to use the packages. They are broadly organized into the following sections:\r\nTidyverse\r\nFigures\r\nFisheries Packages\r\nGeospatial Packages\r\nMiscellaneous\r\nStatistics\r\nTables\r\nTelemetry\r\nThe table below briefly lists the contents of each section, but it is highly recommended you familiarize yourself with the gist of many of the packages listed.\r\nTidyverse\r\nPackage\r\nSection Link\r\nPurpose\r\nreadr\r\nlink to readr\r\ndata import\r\ntidyr\r\nlink to tidyr\r\ndata tidying\r\ndplyr\r\nlink to dplyr\r\ndata manipulation\r\nggplot2\r\nlink to ggplot2\r\ndata visualization\r\npurrr\r\nlink to purrr\r\nfunctional programming\r\ntibble\r\nlink to tibble\r\nre-imaging dataframes\r\nstringr\r\nlink to stringr\r\nstring manipulation\r\nforcats\r\nlink to forcats\r\nfactor manipulation\r\nlubridate\r\nlink to lubridate\r\ndates and times\r\n\r\nThe tidyverse (Wickham et al. 2019) is a set of packages that work in harmony because they share common data representations and API [Application Programming Interfaces] design. The tidyverse package is designed to make it easy to install and load core packages from the tidyverse in a single command.\r\nIf you’d like to learn how to use the tidyverse effectively, the best place to start is R for Data Science (2e).\r\n\r\nSource: tidyverse\r\n\r\n\r\ntidyverse is a collection of several key packages that together are extremely powerful at data manipulation and visualization. It is one of the most important packages to become familiar with in the field of fisheries.\r\nCalling the tidyverse will also load the core tidyverse packages, including:\r\nreadr, for data import\r\ntidyr, for data tidying\r\ndplyr, for data manipulation\r\nggplot2, for data visualization\r\npurrr, for functional programming\r\ntibble, for modern re-imagining of data frames\r\nstringr, for strings\r\nforcats, for factors\r\nlubridate, for dates/times\r\ntidyverse website\r\ntidyverse functions\r\ntidyverse article: the tidy tools manifesto\r\ntidyverse article: welcome to the tidyverse\r\ntidyverse reference manual\r\nreadr\r\n\r\nThe goal of readr (Wickham, Hester, and Bryan 2024) is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the data import chapter in R for Data Science.\r\n\r\nSource: readr\r\n\r\n\r\nreadr allows you to read in various types of data files. Specifically, it is helpful when reading in comma separated values (CSV) files by using the following code:\r\n\r\nread_csv(“filename.csv”)\r\n\r\nreadr website\r\nreadr functions\r\nreadr article: introduction\r\nreadr article: column type\r\nreadr article: locales\r\nreadr reference manual\r\nreadr tutorial\r\n\r\n\r\n\r\n\r\n\r\n\r\nFigure 1: readr cheatsheet\r\n\r\n\r\n\r\n\r\nReturn to Tidyverse\r\n\r\ntidyr\r\n\r\nThe goal of tidyr (Wickham, Vaughan, and Girlich 2024) is to help you create tidy data. Tidy data is data where:\r\nEach variable is a column; each column is a variable.\r\nEach observation is a row; each row is an observation.\r\nEach value is a cell; each cell is a single value.\r\n\r\nTidy data describes a standard way of storing data that is used wherever possible throughout the tidyverse. If you ensure that your data is tidy, you’ll spend less time fighting with the tools and more time working on your analysis. Learn more about tidy data in vignette (“tidy-data”).\r\n\r\nSource: tidyr\r\n\r\n\r\ntidyr website\r\ntidyr article: pivoting\r\ntidyr article: rectangling\r\ntidyr article: nested data\r\ntidyr article: tidy data (theory)\r\ntidyr reference manual\r\n\r\n\r\n\r\n\r\n\r\n\r\nFigure 2: tidyr cheatsheet\r\n\r\n\r\n\r\n\r\nReturn to Tidyverse\r\n\r\ndplyr\r\n\r\ndplyr (Wickham et al. 2023) is a grammar of data manipulation, providing a consistent set of verbs that help you solve the most common data manipulation challenges:\r\nmutate() adds new variables that are functions of existing variables\r\nselect() picks variables based on their names.\r\nfilter() picks cases based on their values.\r\nsummarise() reduces multiple values down to a single summary.\r\narrange() changes the ordering of the rows.\r\nThese all combine naturally with group_by() which allows you to perform any operation “by group”. You can learn more about them in vignette (“dplyr”). As well as these single-table verbs, dplyr also provides a variety of two-table verbs, which you can learn about in vignette (“two-table”).\r\nIf you are new to dplyr, the best place to start is the data transformation chapter in R for Data Science.\r\n\r\nSource: dplyr\r\n\r\n\r\ndplyr website\r\ndplyr article: introduction\r\ndplyr article: grouped data\r\ndplyr article: two-table verbs\r\ndplyr article: dplyr base R\r\ndplyr reference guide\r\n\r\n\r\n\r\n\r\n\r\n\r\nFigure 3: dplyr cheatsheet\r\n\r\n\r\n\r\n\r\nReturn to Tidyverse\r\n\r\nggplot2\r\n\r\nggplot2 (Wickham 2016) is a system for declaratively creating graphics, based on The Grammar of Graphics. You provide the data, tell ggplot2 how to map variables to aesthetics, what graphical primitives to use, and it takes care of the details….\r\nIf you are new to ggplot2 you are better off starting with a systematic introduction, rather than trying to learn from reading individual documentation pages. Currently, there are three good places to start:\r\nThe Data Visualization and Communication chapters in R for Data Science. R for Data Science is designed to give you a comprehensive introduction to the tidyverse, and these two chapters will get you up to speed with the essentials of ggplot2 as quickly as possible.\r\nIf you’d like to take an online course, try Data Visualization in R With ggplot2 by Kara Woo.\r\nIf you’d like to follow a webinar, try Plotting Anything with ggplot2 by Thomas Lin Pedersen.\r\nIf you want to dive into making common graphics as quickly as possible, I recommend the R Graphics Cookbook by Winston Chang. It provides a set of recipes to solve common graphics problems.\r\nIf you’ve mastered the basics and want to learn more, read ggplot2: Elegant Graphics for Data Analysis. It describes the theoretical underpinnings of ggplot2 and shows you how all the pieces fit together. This book helps you understand the theory that underpins ggplot2, and will help you create new types of graphics specifically tailored to your needs.\r\n\r\nSource: ggplot2\r\n\r\n\r\nggplot2 website\r\nggplot2 tutorial: aesthetic specifications\r\nggplot2 tutorial: faceting FAQ\r\nggplot2 tutorial: customizing FAQ\r\nggplot2 tutorial: annotation FAQ\r\nggplot2 tutorial: reordering FAQ\r\nggplot2 tutorial: barplots FAQ\r\nggplot2 tutorial\r\nggplot2 reference manual\r\nggplot2 tutorial\r\n\r\n\r\n\r\n\r\n\r\n\r\nFigure 4: ggplot2 cheatsheet\r\n\r\n\r\n\r\n\r\nReturn to Tidyverse\r\n\r\npurrr\r\n\r\npurrr (Wickham and Henry 2023) enhances R’s functional programming (FP) toolkit by providing a complete and consistent set of tools for working with functions and vectors. If you’ve never heard of FP before, the best place to start is the family of map() functions which allow you to replace many for loops with code that is both more succinct and easier to read. The best place to learn about the map() functions is the iteration chapter in R for Data Science.\r\n\r\nSource: purrr\r\n\r\n\r\npurrr website\r\npurrr article: base R\r\npurrr article: functional programming in other languages\r\npurrr reference manual\r\n\r\n\r\n\r\n\r\n\r\n\r\nFigure 5: purrr cheatsheet\r\n\r\n\r\n\r\n\r\nReturn to Tidyverse\r\n\r\ntibble\r\n\r\nA tibble (Müller and Wickham 2023), or tbl_df, is a modern reimagining of the data.frame, keeping what time has proven to be effective, and throwing out what is not. Tibbles are data.frames that are lazy and surly: they do less (i.e. they don’t change variable names or types, and don’t do partial matching) and complain more (e.g. when a variable does not exist). This forces you to confront problems earlier, typically leading to cleaner, more expressive code. Tibbles also have an enhanced print() method which makes them easier to use with large datasets containing complex objects.\r\nIf you are new to tibbles, the best place to start is the tibbles chapter in R for data science.\r\n\r\nSource: tibble\r\n\r\n\r\ntibble website\r\ntibble article: getting started\r\ntibble article: column types\r\ntibble article: controlling display of numbers\r\ntibble article: comparing display with data frames\r\ntibble article: functions\r\ntibble reference manual\r\n\r\nReturn to Tidyverse\r\n\r\nstringr\r\n\r\nStrings are not glamorous, high-profile components of R, but they do play a big role in many data cleaning and preparation tasks. The stringr (Wickham 2023b) package provides a cohesive set of functions designed to make working with strings as easy as possible. If you’re not familiar with strings, the best place to start is the chapter on strings in R for Data Science.\r\n\r\nSource: stringr\r\n\r\n\r\nstringr website\r\nstringr article: introduction to stringr\r\nstringr article: from base R\r\nstringr article: regular expressions\r\nstringr functions\r\nstringr reference manual\r\n\r\n\r\n\r\n\r\n\r\n\r\nFigure 6: stringr cheatsheet\r\n\r\n\r\n\r\nforcats\r\n\r\nR uses factors to handle categorical variables, variables that have a fixed and known set of possible values. Factors are also helpful for reordering character vectors to improve display. The goal of the forcats (Wickham 2023a) package is to provide a suite of tools that solve common problems with factors, including changing the order of levels or the values. Some examples include:\r\nfct_reorder(): Reordering a factor by another variable.\r\nfct_infreq(): Reordering a factor by the frequency of values.\r\nfct_relevel(): Changing the order of a factor by hand.\r\nfct_lump(): Collapsing the least/most frequent values of a factor into “other”.\r\nYou can learn more about each of these in vignette (“forcats”). If you’re new to factors, the best place to start is the chapter on factors in R for Data Science.\r\n\r\nSource: forcats\r\n\r\n\r\nforcats website\r\nforcats article: introduction\r\nforcats functions\r\nforcats reference manual\r\n\r\n\r\n\r\nFigure 7: forcats cheatsheet\r\n\r\n\r\n\r\n\r\nReturn to Tidyverse\r\n\r\nlubridate\r\n\r\nDate-time data can be frustrating to work with in R. R commands for date-times are generally unintuitive and change depending on the type of date-time object being used. Moreover, the methods we use with date-times must be robust to time zones, leap days, daylight savings times, and other time related quirks, and R lacks these capabilities in some situations. lubridate (Grolemund and Wickham 2011) makes it easier to do the things R does with date-times and possible to do the things R does not.\r\nIf you are new to lubridate, the best place to start is the date and times chapter in R for data science.\r\n\r\nSource: lubridate\r\n\r\n\r\nlubridate website\r\nlubridate functions\r\nlubridate tutorial\r\nlubridate reference manual\r\nlubridate article: do more with dates and times in R\r\n\r\n\r\n\r\n\r\n\r\n\r\nFigure 8: lubridate cheatsheet\r\n\r\n\r\n\r\n\r\nReturn to Tidyverse\r\n\r\nFigures\r\nPackage\r\nSection Link\r\nPurpose\r\ndirectlabels\r\nlink to directlabels\r\nadjust label positions\r\nesquisse\r\nlink to esquisse\r\nshiny app to visualize data\r\nfishualize\r\nlink to fishualize\r\nfish shapes and color palettes\r\ngeomtextpath\r\nlink to geomtextpath\r\nadjust label position and angles\r\ngganimate\r\nlink to gganimate\r\ncreate interactive plots\r\nggbreak\r\nlink to ggbreak\r\ncreate axis breaks\r\nggbump\r\nlink to ggbump\r\ncreate bump charts\r\nggeasy\r\nlink to ggeasy\r\nmakes ggplot2 more intuitive to use\r\nggforce\r\nlink to ggforce\r\nforce points to specific place on plot\r\ngghighlight\r\nlink to gghighlight\r\nhighlight specific region of data\r\nggiraph\r\nlink to ggiraph\r\ncreate dynamic graphs\r\nggpattern\r\nlink to ggpattern\r\nfill regions with custom patterns\r\nggraph\r\nlink to ggraph\r\nsupport relational data structures\r\nggrepel\r\nlink to ggrepel\r\nremoves overlaps in text labels\r\nggsankeyfier\r\nlink to ggsankeyfier\r\ncreate sankey bump plots\r\nggstatsplot\r\nlink to ggstatsplot\r\nadd statistical labels directly to plots\r\nggtext\r\nlink to ggtext\r\nadjust orientation of labels\r\nggthemes\r\nlink to ggthemes\r\nenhance plot aesthetics\r\nggwordcloud\r\nlink to ggwordcloud\r\ncreate custom wordclouds\r\nhrbrthemes\r\nlink to hrbrthemes\r\nchoose fonts on figures\r\npatchwork\r\nlink to patchwork\r\ncombine multiple plots\r\npaletteer\r\nlink to paletteer\r\ncollection of 2759 palettes\r\npbapply\r\nlink to pbapply\r\nadd progress bars\r\nplot3D\r\nlink to plot3D\r\ntools for plotting 2D and 3D data\r\nplotrix\r\nlink to plotrix\r\nplotting, labeling, and scaling\r\nshiny\r\nlink to shiny\r\ncreate interactive web apps\r\nshowtext\r\nlink to showtext\r\ncustomize font on figures\r\n\r\nggplot2 is very powerful on its own. But it gets even better thanks to its extensions\r\nHere is a curated a collection of the best ggplot2 extensions that enhance and elevate the core capabilities of ggplot2.\r\nThese extensions, seamlessly integrated with the foundational ggplot2 framework, unlock new visualization techniques, streamline intricate plotting tasks, and offer innovative ways to represent complex data.\r\n\r\nSource: R Graph Gallery\r\n\r\n\r\ndirectlabels\r\nDirect Labels for Multicolor Plots\r\n\r\nAn extensible framework for automatically placing direct labels onto multicolor lattice or ggplot2 plots. Label positions are described using Positioning Methods which can be re-used across several different plots. There are heuristics for examining “trellis” and “ggplot” objects and inferring an appropriate Positioning Method.\r\n\r\nSource: directlabels\r\n\r\n\r\n\r\nThere are 2 major reasons why the directlabels (Hocking 2025) package is so useful:\r\nDirect labeling is difficult to do “by hand” using standard base/lattice/ggplot2 plotting functions. The directlabels package allows you to define your direct labels in terms of a simple Positioning Method. This makes your code simpler, more readable, and less repetitive.\r\nThe functions that you will use to direct label a plot “by hand” depend on the plot package you use. The directlabels package offers a unified interface for both lattice and ggplot2 plots, thus greatly simplifying your code.\r\n\r\nSource: directlabels\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nFigure 9: directlabels example\r\n\r\n\r\n\r\ndirectlabels website\r\ndirectlabels article: motivation for direct labeling\r\ndirectlabels article: smart labeling\r\ndirectlabels article: advanced examples\r\ndirectlabels reference manual\r\n\r\nReturn to Figures\r\n\r\nesquisse\r\n\r\nThis addin [esquisse](Meyer and Perrier 2025) allows you to interactively explore your data by visualizing it with the ggplot2 package. It allows you to draw bar plots, curves, scatter plots, histograms, boxplot and sf objects, then export the graph or retrieve the code to reproduce the graph.\r\n\r\nSource: esquisse\r\n\r\n\r\nesquisse website\r\nesquisse article: getting started\r\nesquisse article: shiny usage\r\nesquisse shiny app\r\nesquisse functions\r\nesquisse reference manual\r\n\r\nReturn to Figures\r\n\r\nfishualize\r\n\r\nThe fishualize (Schiettekatte, Brandl, and Casey 2022) package provides color scales for plotting in R based on nature’s most stunning and colorful organisms: teleost fishes (with a few chondrichthyan cameos). #TeamFish in its colorful glory\r\n\r\nSource: fishualize\r\n\r\n\r\nAvailable Palettes\r\n\r\nThe package contains one scale per species, defined by five dominant colors. The number of fishualized species will expand over time. For a list of fish species that are currently available, run fish_palettes().\r\nA visual overview of the color scales can be found here.\r\n\r\nSource: fishualize\r\n\r\n\r\n\r\n\r\n\r\nFigure 10: fishualize palette example\r\n\r\n\r\n\r\nAll Species Palettes (2/18/25)\r\n\r\n\r\n\r\n\r\n\r\n\r\nSpecies by Order\r\nAcanthuriformes\r\nAcanthuridae\r\n- Acanthurus chirurgus \r\n- Acanthurus coeruleus \r\n- Acanthurus leucosternon \r\n- Acanthurus olivaceus\r\n- Acanthurus sohal\r\n- Acanthurus triostegus\r\n- Naso lituratus\r\n- Paracanthurus hepatus\r\n- Zebrasoma velifer\r\n- Zebrasoma xanthurum\r\nCallanthiidae\r\n- Callanthias australis\r\nChaetodontidae\r\n- Chaetodon ephippium\r\n- Chaetodon larvatus\r\n- Chaetodon pelewensis\r\n- Chaetodon sedentarius\r\n- Prognathodes brasiliensis\r\n- Prognathodes guyanensis\r\n- Forcipiger longirostris\r\n- Hemitaurichthys polylepis\r\nHaemulidae\r\n- Anisotremus virginicus\r\n- Haemulon squamipinna\r\n- Haemulon plumierii\r\nLutjanidae\r\n- Lutjanus jocu\r\n- Lutjanus sebae\r\nPomacanthidae\r\n- Chaetodontoplus conspicillatus\r\n- Centropyge loricula\r\n- Holacanthus ciliaris\r\n- Pomacanthus imperator\r\n- Pomacanthus paru\r\n- Pomacanthus xanthometopon\r\nPriacanthidae\r\n- Heteropriacanthus cruentatus\r\nZanclidae\r\n- Zanclus cornutus\r\nAnguilliformes\r\nMuraenidae\r\n- Gymnothorax funebris\r\nOphichthidae\r\n- Myrichthys ocellatus\r\nAtheriniformes\r\nAtherinopsidae\r\n- Atherinella brasilia\r\nBlenniiformes\r\nBlennidae\r\n- Exallias brevis\r\n- Hypleurochilus fissicornis\r\n- Hypsoblennius invemar\r\n- Parablennius marmoreus\r\n- Parablennius pilicornis\r\nGrammatidae\r\n- Gramma brasiliensis\r\n- Gramma loreto\r\nLabrisomidae\r\n- Labrisomus cricota\r\n- Labrisomus nuchipinnis\r\nPomacentridae\r\n- Chromis multilineata\r\n- Chromis vanderbilti\r\n- Hypsypops rubicundus\r\n- Stegastes nigricans\r\n- Stegastes partitus\r\n- Stegastes variabilis\r\nPseudochromidae\r\n- Pseudochromis aldabraensis \r\nCallionymiformes\r\nCallionymidae\r\n- Synchiropus splendidus\r\nCarangiformes\r\nCarangidae\r\n- Elagatis bipinnulata\r\nCoryphaenidae\r\n- Coryphaena hippurus\r\nPleuronectidae\r\n- Pleuronectes platessa\r\nCarcharhiniformes\r\nCarcharhinidae\r\n- Prionace glauca\r\nCentrarchiformes\r\nCentrarchidae\r\n- Lepomis megalotis \r\n- Micropterus punctulatus \r\nClupeiformes\r\nAlosidae\r\n- Alosa fallax\r\nDorosomatidae\r\n- Harengula jaguana\r\n- Lile piquitidnga \r\n- Opisthonema oglinum \r\n- Sardinella brasiliensis \r\nEngraulidae\r\n- Anchoviella lepidentostole\r\n- Cetengraulis edentulus\r\n- Lycengraulis grossidens\r\nCypriniformes\r\nCyprinidae\r\n- Barbus barbus\r\nEsociformes\r\nEsocidae\r\n- Esox lucius\r\nGadiformes\r\nGadidae\r\n- Gadus morhua\r\nGobiiformes\r\nApogonidae\r\n- Ostorhinchus angustatus \r\nGobiidae\r\n- Bryaninops natans \r\n- Elacatinus figaro\r\n- Ostorhinchus angustatus \r\n- Nemateleotris magnifica \r\n- Neogobius melanostomus \r\n- Trimma lantana \r\n- Valenciennea strigata \r\nHolocentriformes\r\nHolocentridae\r\n- Holocentrus adscensionis\r\n- Sargocentron bullisi\r\nLampriformes\r\nLampridae\r\n- Lampris guttatus\r\nLophiiformes\r\nAntennariidae\r\n- Antennarius commerson\r\n- Antennarius multiocellatus\r\n- Histiophryne psychedelica\r\nMugiliformes\r\nMugilidae\r\n- Mugil liza \r\nMyliobatiformes\r\nDasyatidae\r\n- Taeniura lymma \r\nOrectolobiformes\r\nGinglymostomatidae\r\n- Ginglymostoma cirratum\r\nPerciformes\r\nAnthiadidae\r\n- Pronotogrammus martinicensis\r\nHexagrammidae\r\n- Hexagrammos lagocephalus\r\nLabridae\r\n- Bodianus pulchellus\r\n- Bodianus rufus\r\n- Cirrhilabrus solorensis\r\n- Cirrhilabrus tonozukai\r\n- Clepticus brasiliensis\r\n- Clepticus parrae\r\n- Coris gaimard\r\n- Epibulus insidiator \r\n- Gomphosus varius \r\n- Halichoeres bivittatus\r\n- Halichoeres brasiliensis\r\n- Halichoeres dimidiatus\r\n- Halichoeres garnoti\r\n- Halichoeres radiatus\r\n- Minilabrus striatus\r\n- Pseudocheilinus tetrataenia \r\n- Semicossyphus pulcher \r\n- Stethojulis bandanensis \r\n- Thalassoma bifasciatum\r\n- Thalassoma hardwicke\r\n- Thalassoma noronhanum\r\n- Thalassoma pavo\r\n- Xyrichtys novacula \r\nPercidae\r\n- Etheostoma barrenense\r\n- Etheostoma spectabile\r\n- Sander lucioperca \r\nScaridae\r\n- Chlorurus microrhinos\r\n- Chlorurus spilurus\r\n- Scarus ghobban\r\n- Scarus globiceps\r\n- Scarus hoefleri\r\n- Scarus quoyi\r\n- Scarus tricolor\r\n- Scarus zelindae\r\n- Sparisoma frondosum_m\r\n- Sparisoma tuyupiranga_f\r\n- Sparisoma tuyupiranga_m\r\n- Sparisoma viride\r\nScorpaenidae\r\n- Pterois volitans \r\nSerranidae\r\n- Acanthisthius brasilianus\r\n- Cephalopholis argus\r\n- Cephalopholis fulva\r\n- Dermatolepis inermis\r\n- Epinephelus fasciatus\r\n- Epinephelus lanceolatus\r\n- Epinephelus marginatus\r\n- Epinephelus striatus\r\n- Hypoplectrus puella \r\n- Mycteroperca bonaci \r\n- Paralabrax clathratus \r\n- Paranthias furcifer \r\n- Serranus baldwini\r\n- Serranus scriba\r\n- Variola louti \r\nPetromyzontiformes\r\nPetromyzontidae\r\n- Petromyzon marinus\r\nRhinopristiformes\r\nTrygonorrhinidae\r\n- Zapteryx brevirostris\r\nSalmoniformes\r\nSalmonidae\r\n- Oncorhynchus gorbuscha\r\n- Oncorhynchus keta\r\n- Oncorhynchus kisutch\r\n- Oncorhynchus mykiss\r\n- Oncorhynchus nerka\r\n- Oncorhynchus tshawytscha\r\n- Salmo salar\r\n- Salmo trutta\r\n- Salvelinus fontinalis \r\nScombriformes\r\nScombridae\r\n- Thunnus obesus\r\nSiluriformes\r\nLoricariidae\r\n- Pareiorhaphis garbei\r\nPimelodidae\r\n- Phractocephalus hemioliopterus\r\nSyngnathiformes\r\nAulostomidae\r\n- Aulostomus chinensis \r\nMullidae\r\n- Parupeneus insularis \r\n- Pseudupeneus maculatus \r\nSyngnathidae\r\n- Hippocampus reidi\r\nTetraodontiformes\r\nBalistidae\r\n- Balistapus undulatus\r\n- Balistes vetula\r\n- Balistoides conspicillum\r\n- Rhinecanthus aculeatus\r\n- Rhinecanthus assasi\r\n- Melichthys vidua \r\n- Odonus niger \r\nMonacanthidae\r\n- Alterus scriptus\r\n- Cantherhines macrocerus\r\n- Oxymonacanthus longirostris\r\nOstraciidae\r\n- Acanthostracion polygonius\r\n- Acanthostracion_polygonius_y\r\n- Ostracion cubicus\r\n- Ostracion whitleyi\r\nFish Shapes\r\n\r\nfishualize 2.0 enables you to add fish silhouettes to a ggplot object with the function add_fishape(). To get an overview of all available silhouettes, run fishapes().\r\n\r\nSource: fishualize\r\n\r\n\r\n\r\n\r\n\r\n\r\nFigure 11: fishualize shape example\r\n\r\n\r\n\r\nAll Shapes (2/18/25)\r\n\r\n\r\n\r\n\r\n\r\n\r\nShapes by Order\r\nAcanthuriformes\r\nAcanthuridae\r\n- Acanthurus nigricauda\r\n- Ctenochaetus striatus\r\n- Naso lituratus\r\n- Naso unicornis\r\n- Zebrasoma scopas\r\n- Zebrasoma velifer\r\nChaetodontidae\r\n- Chaetodon auriga\r\n- Chaetodon ornatissimus\r\n- Chaetodon plebius\r\n- Chaetodon trifasciatus\r\n- Chaetodon vagabundus\r\nEphippidae\r\n- Platax teira\r\nHaemulidae\r\n- Plectorhinchus gibbosus\r\nLethrinidae: \r\n- Lethrinus nebulosus\r\nLutjanidae\r\n- Lutjanus gibbus\r\nAcipenseriformes\r\nAcipenseridae\r\n- Acipenser fulvescens\r\nAtheriniformes\r\nAtherinopsidae\r\n- Atherinella brasiliensis\r\nBatrachoidiformes\r\nBatrachoididae\r\n- Opsanus beta\r\nBeloniformes\r\nBelonidae\r\n- Belone belone\r\nBlenniiformes\r\nBlennidae\r\n- Antennablennius adenensis\r\n- Ecsenius pulcher\r\n- Hypleurochilus pseudoaequipinnis\r\n- Lupinoblennius nicholsi\r\n- Bothus mancus\r\nChaenopsidae\r\n- Acanthemblemaria spinosa\r\nClinidae\r\n- Heteroclinus heptaeolus\r\nDactyloscopidae\r\n- Gillellus uranidea\r\nGobiesocidae\r\n- Acyrtus lanthanum\r\nGrammatidae\r\n- Lipogramma barrettorum\r\nLabrisomidae\r\n- Labrisomus guppyi\r\nCallionymiformes\r\nCallionymidae\r\n- Callionymus bairdi\r\nCharaciformes\r\nCharacidae\r\n- Salminus brasiliensis\r\nErythrinidae\r\n- Hoplias malabaricus\r\nSerrasalmidae\r\n- Colossoma macropomum\r\n- Piaractus brachypomus\r\nCarangiformes\r\nCarangidae\r\n- Caranx melampygus\r\nCarcharhiniformes\r\nCarcharhinidae\r\n- Triaenodon obesus\r\nCtenoluciidae\r\n- Boulengerella cuvieri\r\nCynodontidae\r\n- Hydrolycus armatus\r\nCentrarchiformes\r\nCentrarchidae\r\n- Lepomis megalotis\r\nCheilodactylidae\r\n- Cheilodactylus fuscus\r\nCirrhitidae\r\n- Paracirrhites forsteri\r\nKyphosidae\r\n- Kyphosus cinerascens\r\n- Kyphosus vaigiensis\r\nCichliformes\r\nCichlidae\r\n- Apistogramma hippolytae\r\n- Cichla piquiti\r\n- Cichla temensis\r\nClupeiformes\r\nAlosidae\r\n- Alosa fallax\r\nDorosomatidae\r\n- Harengula clupeola\r\n- Lile piquitinga\r\n- Opisthonema oglinum\r\n- Sardinella brasiliensis\r\nEngraulidae\r\n- Anchoviella lepidentostole\r\n- Cetengraulis edentulus\r\n- Lycengraulis grossidens\r\nSpratelloididae\r\n- Jenkinsia lamprotaenia\r\nCypriniformes\r\nCyprinidae\r\n- Barbus barbus\r\n- Danio rerio\r\nCyprinodontiformes \r\nFundulidae\r\n- Fundulus grandis\r\nEsociformes\r\nEsocidae\r\n- Esox lucius\r\nGobiiformes\r\nApogonidae\r\n- Apogon binotatus\r\nGobiidae\r\n- Coryogalops anomolus\r\n- Eviota guttata\r\n- Eviota melasma\r\n- Fusigobius neophytus\r\n- Gnatholepis cauerensis\r\n- Gobiodon okinawae\r\n- Hetereleotris vulgaris\r\n- Priolepis hippoliti\r\n- Risor ruber\r\nHeterodontiformes \r\nHeterodontidae \r\n- Heterodontus portusjacksoni\r\nHolocentriformes \r\nHolocentridae\r\n- Myripristis violacea\r\n- Sargocentron spiniferum\r\nLamniformes\r\nAlopiidae\r\n- Alopias vulpinus\r\nMyliobatiformes\r\nDasyatidae\r\n- Bathytoshia brevicaudata\r\nMobulidae\r\n- Mobula birostris\r\nOphidiiformes\r\nBythitidae\r\n- Dinematichthys iluocoeteoides\r\nOrectolobiformes \r\nGinglymostomatidae\r\n- Nebrius ferrugineus\r\nPerciformes\r\nChannichthyidae\r\n- Chaenocephalus aceratus\r\nCottidae\r\n- Artedius harringtoni\r\nLabridae\r\n- Chlorurus microrhinus\r\n- Chlorurus sordidus\r\n- Coris gaimard\r\n- Epibulus insidiator\r\n- Gomphosus caeruleus\r\n- Labroides bicolor\r\n- Labroides dimidiatus\r\n- Labroides pectoralis\r\n- Scarus oviceps\r\n- Scarus rivulatus\r\n- Scarus schlegeli\r\nLiparidae \r\n- Careproctus staufferi\r\nScaridae\r\n- Sparisoma cretense\r\nSyngnathiformes\r\nAulostomidae\r\n- Aulostomus chinensis\r\nTetraodontiformes\r\nBalistidae\r\n- Balistapus undulatus\r\n- Odonus niger\r\nDiodontidae\r\n- Dicotylichthys punctulatus\r\nTorpediniformes\r\nHypnidae\r\n- Hypnos monopterygius\r\n\r\nfishualize website\r\nfish shapes overview\r\nfishualize reference manual\r\ncontribute to fishualize\r\n\r\nReturn to Figures\r\n\r\ngeomtextpath\r\nCreate curved text in ggplot2\r\n\r\nThe existing text-based geom layers in ggplot2 (geom_text and geom_label) are ideal for the majority of plots, since typically textual annotations are short, straight and in line with the axes. However, there are some occasions when it is useful to have text follow a curved path. This may be to create or recreate a specific visual effect, or it may be to label a circular / polar plot in a more “natural” way. Direct and automatic text labels that adhere to their associated line can also provide a neat alternative to legends, without the need for specifying exact label positions, and with a lower risk of overplotting.\r\nUsing geomtextpath (Cameron and van den Brand 2022), your text can follow any path, and will remain correctly spaced and angled, even if you change the size and aspect ratio of your plotting device. It does so without the need to redraw your plot each time, as shown in the introduction vignette.\r\n\r\nSource: geomtextpath\r\n\r\n\r\ngeomtextpath website\r\ngeomtextpath article: introduction\r\ngeomtextpath article: aesthetics, parameters, and scales\r\ngeomtextpath article: curved text in polar coordinates\r\ngeomtextpath article: gallery of examples\r\ngeomtextpath functions\r\ngeomtextpath reference manual\r\n\r\n\r\n\r\nFigure 12: geomtextpath example\r\n\r\n\r\n\r\n\r\nReturn to Figures\r\n\r\ngganimate\r\n\r\ngganimate (Pedersen and Robinson 2024) extends the grammar of graphics as implemented by ggplot2 to include the description of animation. It does this by providing a range of new grammar classes that can be added to the plot object in order to customise how it should change with time.\r\n\r\nSource: gganimate\r\n\r\n\r\ngganimate website\r\ngganimate article: getting started\r\ngganimate functions\r\ngganimate reference manual\r\n\r\n\r\n\r\n\r\n\r\n\r\nFigure 13: gganimate cheatsheet\r\n\r\n\r\n\r\n\r\nReturn to Figures\r\n\r\nggbreak\r\nSet Axis Break for ggplot2\r\n\r\nggbreak (Shuangbin Xu et al. 2021) - An implementation of scale functions for setting axis breaks of a ‘gg’ plot.\r\n\r\nSource: ggbreak\r\n\r\n\r\nggbreak website\r\nggbreak vignette\r\nggbreak reference manual\r\n\r\n\r\n\r\nFigure 14: ggbreak example\r\n\r\n\r\n\r\n\r\nReturn to Figures\r\n\r\nggbump\r\nBump Chart and Sigmoid Curves\r\n\r\nThe R package ggbump (D. Sjoberg 2020) creates elegant bump charts in ggplot. Bump charts are good to use to plot ranking over time, or other examples when the path between two nodes have no statistical significance. Also includes functions to create custom smooth lines called sigmoid curves.\r\n\r\nSource: ggbump\r\n\r\n\r\n\r\n\r\n\r\nFigure 15: ggbump example from documentation\r\n\r\n\r\n\r\nggbump GitHub\r\nggbump reference manual\r\n\r\nReturn to Figures\r\n\r\nggeasy\r\n\r\nggeasy (Carroll, Schep, and Sidi 2024) Provides a series of aliases to commonly used but difficult to remember ggplot2 sequences.\r\n\r\nSource: ggeasy\r\n\r\n\r\nggeasy website\r\nggeasy functions\r\nggeasy article: ggplot2 shortcuts\r\nggeasy article: tests and coverage\r\nggeasy reference manual\r\n\r\n\r\n\r\nFigure 16: ggeasy example\r\n\r\n\r\n\r\n\r\nReturn to Figures\r\n\r\nggforce\r\n\r\nThe aim of ggplot2 is to aid in visual data investigations. This focus has led to a lack of facilities for composing specialised plots. ggforce (Pedersen 2024a) aims to be a collection of mainly new stats and geoms that fills this gap. All additional functionality is aimed to come through the official extension system so using ggforce should be a stable experience.\r\n\r\nSource: ggforce\r\n\r\n\r\nggforce website\r\nggforce functions\r\nggforce reference manual\r\n\r\n\r\n\r\nFigure 17: ggforce example\r\n\r\n\r\n\r\n\r\nReturn to Figures\r\n\r\ngghighlight\r\nHighlight Lines and Points in ggplot2\r\n\r\nThe gghighlight (Yutani 2024) package in R is an extension of the ggplot2 package, designed to simplify the process of highlighting elements.\r\n\r\nSource: R Graph Gallery\r\n\r\n\r\ngghighlight website\r\ngghighlight article: introduction\r\ngghighlight reference manual\r\n\r\n\r\n\r\n\r\n\r\n\r\nFigure 18: gghighlight example\r\n\r\n\r\n\r\n\r\nReturn to Figures\r\n\r\nggiraph\r\nMake ggplot2 dynamic and interactive\r\n\r\nThe ggiraph (Gohel and Skintzos 2024) package in R is an extension of the ggplot2 package, designed to simplify the process of creating interactive and dynamic graphs. It’s an htmlwidget, which means it’s highly compatible with RMarkdown/Quarto document and Shiny application.\r\n\r\nSource: R Graph Gallery\r\n\r\n\r\nggiraph website\r\nggiraph book\r\nggiraph functions\r\nggiraph reference manual\r\n\r\nReturn to Figures\r\n\r\nggpattern\r\n\r\n[ggpattern] (FC, Davis, and ggplot2 authors 2025) Provides ggplot2 geoms filled with various patterns. Includes a patterned version of every ggplot2 geom that has a region that can be filled with a pattern. Provides a suite of ggplot2 aesthetics and scales for controlling pattern appearances. Supports over a dozen builtin patterns (every pattern implemented by gridpattern) as well as allowing custom user-defined patterns.\r\n\r\nSource: ggpattern\r\n\r\n\r\nggpattern website\r\nggpattern article: creating the logo in R\r\nggpattern article: developing patterns\r\nggpattern article: geom gallery - array-based patterns\r\nggpattern article: geom gallery - geometry-based patterns\r\nggpattern article: parameters for geometry-based patterns\r\nggpattern article: animating patterns with gganimate\r\nggpattern article: patterns ‘image’ and ‘placeholder’ parameters and examples\r\nggpattern article: patterns ‘gradient’, ‘ambient’, and ‘plasma’ patterns\r\nggpattern article: patterns ‘circle’, ‘pch’, ‘regular_polygon’, and ‘rose’ parameters and examples\r\nggpattern article: patterns ‘stripe’, ‘wave’, ‘crosshatch’, and ‘weave’ parameters and examples\r\nggpattern article: patterns ‘magick’ and ‘polygon_tiling’ parameters and examples\r\nggpattern functions\r\nggpattern reference manual\r\n\r\n\r\n\r\nFigure 19: ggpattern example\r\n\r\n\r\n\r\n\r\nReturn to Figures\r\n\r\nggraph\r\n\r\nggraph (Pedersen 2024b) is an extension of ggplot2 aimed at supporting relational data structures such as networks, graphs, and trees. While it builds upon the foundation of ggplot2 and its API it comes with its own self-contained set of geoms, facets, etc., as well as adding the concept of layouts to the grammar\r\n\r\nSource: ggraph\r\n\r\n\r\nggraph website\r\nggraph functions\r\nggraph article: layouts\r\nggraph article: nodes\r\nggraph article: edges\r\nggraph article: tidygraph interface\r\nggraph reference manual\r\n\r\n\r\n\r\nFigure 20: ggraph example\r\n\r\n\r\n\r\n\r\nReturn to Figures\r\n\r\nggrepel\r\n\r\nggrepel (Slowikowski 2024) provides geoms for ggplot2 to repel overlapping text labels:\r\ngeom_text_repel()\r\ngeom_label_repel()\r\n\r\nText labels repel away from each other, away from data points, and away from edges of the plotting area.\r\n\r\nSource: ggrepel\r\n\r\n\r\nggrepel website\r\nggrepel examples\r\nggrepel functions\r\nggrepel reference manual\r\n\r\n\r\n\r\n\r\n\r\n\r\nFigure 21: ggrepel example\r\n\r\n\r\n\r\n\r\nReturn to Figures\r\n\r\nggsankeyfier\r\n\r\nThe goal of ggsankey (de Vries 2024) is to make beautiful sankey, alluvial and sankey bump plots in ggplot2\r\n\r\nSource: ggsankey\r\n\r\n\r\nggsankey website\r\nggsankey reference manual\r\n\r\n\r\n\r\nFigure 22: ggsankey example\r\n\r\n\r\n\r\n\r\nReturn to Figures\r\n\r\nggstatsplot\r\nggplot2 Based Plots with Statistical Details\r\n\r\nggstatsplot (Patil 2021) is an extension of ggplot2 package for creating graphics with details from statistical tests included in the information-rich plots themselves. In a typical exploratory data analysis workflow, data visualization and statistical modeling are two different phases: visualization informs modeling, and modeling in its turn can suggest a different visualization method, and so on and so forth. The central idea of ggstatsplot is simple: combine these two phases into one in the form of graphics with statistical details, which makes data exploration simpler and faster.\r\n\r\nSource: ggstatsplot\r\n\r\n\r\nggstatsplot website\r\nggstatsplot plot list\r\nggstatsplot reference manual\r\n\r\n\r\n\r\nFigure 23: ggstatsplot example\r\n\r\n\r\n\r\n\r\nReturn to Figures\r\n\r\nggtext\r\n\r\nThe ggtext (Wilke and Wiernik 2025) package provides simple Markdown and HTML rendering for ggplot2. Under the hood, the package uses the gridtext package for the actual rendering, and consequently it is limited to the feature set provided by gridtext.\r\n\r\nSource: ggtext\r\n\r\n\r\nggtext website\r\nggtext article: plotting with markdown text\r\nggtext article: markdown theme elements\r\nggtext functions\r\nggtext reference manual\r\n\r\n\r\n\r\nFigure 24: ggtext example\r\n\r\n\r\n\r\n\r\nReturn to Figures\r\n\r\nggthemes\r\n\r\nSome extra geoms, scales, and themes for ggplot. (Arnold 2024)\r\n\r\nSource: ggthemes\r\n\r\n\r\nggthemes website\r\nggthemes functions\r\nggthemes tutorial\r\nggthemes examples\r\nggthemes reference manual\r\n\r\n\r\n\r\nFigure 25: ggthemes example\r\n\r\n\r\n\r\n\r\nReturn to Figures\r\n\r\nggwordcloud\r\n\r\nggwordcloud (Le Pennec and Slowikowski 2024) provides a word cloud text geom for ggplot2. The placement algorithm implemented in C++ is an hybrid between the one of wordcloud and the one of wordcloud2.js. The cloud can grow according to a shape and stay within a mask. The size aesthetic is used either to control the font size or the printed area of the words. ggwordcloud also supports arbitrary text rotation. The faceting scheme of ggplot2 can also be used. Two functions meant to be the equivalent of wordcloud and wordcloud2 are proposed. Last but not least you can use gridtext markdown/html syntax in the labels\r\n\r\nSource: ggwordcloud\r\n\r\n\r\nggwordcloud website\r\nggwordcloud functions\r\nggwordcloud reference manual\r\n\r\n\r\n\r\nFigure 26: ggwordcloud example\r\n\r\n\r\n\r\n\r\nReturn to Figures\r\n\r\nhrbrthemes\r\n\r\nThe hrbrthemes (Rudis 2024) package in R serves as a valuable extension to the renowned ggplot2 package. Created by Bob Rudis, hrbrthemes offers a collection of opinionated themes and typography settings that aim to elevate the visual appeal of your ggplot2 plots. Whether you are a data scientist, a researcher, or anyone interested in data visualization, this package helps you create publication-quality plots with minimal effort.\r\nThe package is particularly useful for those who want to create publication-quality plots without spending too much time on customization. It provides a set of themes that are not only visually appealing but also adhere to good visualization practices.\r\n\r\nSource: R Graph Gallery\r\n\r\n\r\n\r\nThis is a very focused package that provides typography-centric themes and theme components for ggplot2.\r\nThe core theme: theme_ipsum (“ipsum” is Latin for “precise”) uses Arial Narrow which should be installed on practically any modern system, so it’s “free”-ish. This font is condensed, has solid default kerning pairs and geometric numbers. That’s what I consider the “font trifecta” must-have for charts. An additional quality for fonts for charts is that they have a diversity of weights. Arial Narrow (the one on most systems, anyway) does not have said diversity but this quality is not (IMO) a “must have”.\r\n\r\nSource: hrbrthemes\r\n\r\n\r\nhrbrthemes GitHub\r\nhrbrthemes website\r\nhrbrthemes functions\r\nhrbrthemes reference manual\r\nelevate your ggplot2 visuals with hrbrthemes\r\n\r\n\r\n\r\nFigure 27: hrbrthemes example\r\n\r\n\r\n\r\n\r\nReturn to Figures\r\n\r\npatchwork\r\n\r\nThe ggplot2 package provides a strong API for sequentially building up a plot, but does not concern itself with composition of multiple plots. patchwork (Pedersen 2024c) is a package that expands the API to allow for arbitrarily complex composition of plots by, among others, providing mathematical operators for combining multiple plots.\r\n\r\nSource: patchwork\r\n\r\n\r\nUse this package to modify figures made with ggplot2, to get a more aesthetically appealing figure.\r\npatchwork website\r\npatchwork tutorial: getting started\r\npatchwork tutorial: plot Assembly\r\npatchwork tutorial: controlling Layouts\r\npatchwork tutorial: adding annotation and style\r\npatchwork tutorial: alignment across multiple Pages\r\npatchwork reference manual\r\n\r\n\r\n\r\nFigure 28: patchwork example\r\n\r\n\r\n\r\n\r\nReturn to Figures\r\n\r\npaletteer\r\nComprehensive Collection of Color Palettes\r\n\r\nThe choices of color palettes in R can be quite overwhelming with palettes spread over many packages with many different APIs. paletteer (Hvitfeldt 2021) aims to collect all color palettes across the R ecosystem under the same package with a streamlined API.\r\n\r\nSource: paletteer\r\n\r\n\r\nPalettes\r\n\r\nThe palettes are divided into 2 groups; discrete and continuous. For discrete palette you have the choice between the fixed width palettes and dynamic palettes. Most common of the two are the fixed width palettes which have a set amount of colors which doesn’t change when the number of colors requested vary like the following palettes:\r\n\r\n\r\n\r\n\r\n\r\non the other hand we have the dynamic palettes where the colors of the palette depend on the number of colors you need like the green.pal palette from the cartography package:\r\n\r\n\r\n\r\n\r\n\r\nLastly we have the continuous palettes which provides as many colors as you need for a smooth transition of color:\r\n\r\n\r\n\r\n\r\n\r\nThis package includes 2759 palettes from 75 different packages and information about these can be found in the following data.frames: palettes_c_names, palettes_d_names and palettes_dynamic_names. Additionally this github repo showcases all the palettes included in the package and more.\r\n\r\nSource: paletteer\r\n\r\n\r\n\r\nReturn to Figures\r\n\r\nPalette Explorer\r\n\r\nA web application is available to quickly explore the available palettes.\r\n\r\nSource: paletteer\r\n\r\n\r\n\r\npaletteer is one of my favorite R packages. It consolidates all available color palettes in the R ecosystem into a single package. This means you can access over 2500 palettes with just one line of code.\r\nThe palettes are categorized as continuous or qualitative. The R Graph Gallery has a dedicated page to help you get started.\r\nTo use paletteer, the basic syntax looks like this:\r\n\r\n\r\n\r\n\r\n\r\nSource: Color Palette Finder\r\n\r\n\r\nThis webpage defaults to a palette called Acadia. If you click the name it opens to a dropdown where you can select other palettes, and then see examples of graphics made using that palette to test it before you take time building your own. There is also a dropdown that allows you to view the palettes with colorblind filters on to ensure that the palette will be legible.\r\npaletteer website\r\npaletteer reference manual\r\n\r\nReturn to Figures\r\n\r\nAvailable Palettes\r\nCourtesy of R Color Palettes\r\nButterflyColors\r\n\r\n\r\n\r\nFigure 29: ButterflyColors\r\n\r\n\r\n\r\nDresdenColor\r\n\r\n\r\n\r\nFigure 30: DresdenColor\r\n\r\n\r\n\r\nIslamicArt\r\n\r\n\r\n\r\nFigure 31: IslamicArt\r\n\r\n\r\n\r\nLaCroixColoR\r\n\r\n\r\n\r\nFigure 32: LaCroixColoR\r\n\r\n\r\n\r\nManu\r\n\r\n\r\n\r\nFigure 33: Manu\r\n\r\n\r\n\r\nMapPalettes\r\n\r\n\r\n\r\nFigure 34: MapPalettes\r\n\r\n\r\n\r\nMetBrewer\r\n\r\n\r\n\r\n\r\n\r\n\r\nFigure 35: MetBrewer\r\n\r\n\r\n\r\nMexBrewer\r\n\r\n\r\n\r\nFigure 36: MexBrewer\r\n\r\n\r\n\r\nMoMAColors\r\n\r\n\r\n\r\n\r\n\r\n\r\nFigure 37: MoMAColors\r\n\r\n\r\n\r\nNatParksPalettes\r\n\r\n\r\n\r\nFigure 38: NatParksPalettes\r\n\r\n\r\n\r\nNineteenEightyR\r\n\r\n\r\n\r\nFigure 39: NineteenEightyR\r\n\r\n\r\n\r\nPNWColors\r\n\r\n\r\n\r\nFigure 40: PNWColors\r\n\r\n\r\n\r\nPrettyCols\r\n\r\n\r\n\r\n\r\n\r\n\r\nFigure 41: PrettyCols\r\n\r\n\r\n\r\nRColorBrewer\r\n\r\n\r\n\r\n\r\n\r\n\r\nFigure 42: RColorBrewer\r\n\r\n\r\n\r\nRSkittleBrewer\r\n\r\n\r\n\r\nFigure 43: RSkittleBrewer\r\n\r\n\r\n\r\nRedmonder\r\n\r\n\r\n\r\nFigure 44: Redmonder\r\n\r\n\r\n\r\nawtools\r\n\r\n\r\n\r\nFigure 45: awtools\r\n\r\n\r\n\r\nbasetheme\r\n\r\n\r\n\r\nFigure 46: basetheme\r\n\r\n\r\n\r\nbeyonce\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nFigure 47: beyonce\r\n\r\n\r\n\r\ncalecopal\r\n\r\n\r\n\r\n\r\n\r\n\r\nFigure 48: calecopal\r\n\r\n\r\n\r\ncolRoz\r\n\r\n\r\n\r\n\r\n\r\n\r\nFigure 49: colRoz\r\n\r\n\r\n\r\ncolorBlindness\r\n\r\n\r\n\r\nFigure 50: colorBlindness\r\n\r\n\r\n\r\ncolorblindr\r\n\r\n\r\n\r\nFigure 51: colorblindr\r\n\r\n\r\n\r\ndichromat\r\n\r\n\r\n\r\nFigure 52: dichromat\r\n\r\n\r\n\r\ndutchmasters\r\n\r\n\r\n\r\nFigure 53: dutchmasters\r\n\r\n\r\n\r\nfeathers\r\n\r\n\r\n\r\nFigure 54: feathers\r\n\r\n\r\n\r\nfishualize\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nFigure 55: fishualize\r\n\r\n\r\n\r\nfuturevisions\r\n\r\n\r\n\r\nFigure 56: futurevisions\r\n\r\n\r\n\r\nggpomological\r\n\r\n\r\n\r\nFigure 57: ggpomological\r\n\r\n\r\n\r\nggprism\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nFigure 58: ggprism\r\n\r\n\r\n\r\nggsci\r\n\r\n\r\n\r\n\r\n\r\n\r\nFigure 59: ggsci\r\n\r\n\r\n\r\nggthemes\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nFigure 60: ggthemes\r\n\r\n\r\n\r\nggthemr\r\n\r\n\r\n\r\nFigure 61: ggthemr\r\n\r\n\r\n\r\nghibli\r\n\r\n\r\n\r\nFigure 62: ghibli\r\n\r\n\r\n\r\ngrDevices\r\n\r\n\r\n\r\nFigure 63: grDevices\r\n\r\n\r\n\r\nimpressionist.colors\r\n\r\n\r\n\r\nFigure 64: impressionist.colors\r\n\r\n\r\n\r\njcolors\r\n\r\n\r\n\r\nFigure 65: jcolors\r\n\r\n\r\n\r\nkhroma\r\n\r\n\r\n\r\nFigure 66: khroma\r\n\r\n\r\n\r\nlisa\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nFigure 67: lisa\r\n\r\n\r\n\r\nltc\r\n\r\n\r\n\r\nFigure 68: ltc\r\n\r\n\r\n\r\nmiscpalettes\r\n\r\n\r\n\r\nFigure 69: miscpalettes\r\n\r\n\r\n\r\nmusculusColors\r\n\r\n\r\n\r\nFigure 70: musculusColors\r\n\r\n\r\n\r\nnationalparkcolors\r\n\r\n\r\n\r\nFigure 71: nationalparkcolors\r\n\r\n\r\n\r\nnbapalettes\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nFigure 72: nbapalettes\r\n\r\n\r\n\r\nnord\r\n\r\n\r\n\r\nFigure 73: nord\r\n\r\n\r\n\r\nochRe\r\n\r\n\r\n\r\nFigure 74: ochRe\r\n\r\n\r\n\r\npalettesForR\r\n\r\n\r\n\r\nFigure 75: palettesForR\r\n\r\n\r\n\r\npalettetown\r\n\r\nAn R package providing pokemon colour palettes.\r\nThis package is very much inspired by pokepalettes.\r\n\r\nSource: palettetown\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nFigure 76: palettetown\r\n\r\n\r\n\r\npals\r\n\r\n\r\n\r\nFigure 77: pals\r\n\r\n\r\n\r\npeRReo\r\n\r\n\r\n\r\nFigure 78: peRReo\r\n\r\n\r\n\r\nrcartocolor\r\n\r\n\r\n\r\n\r\n\r\n\r\nFigure 79: rcartocolor\r\n\r\n\r\n\r\nrockthemes\r\n\r\n\r\n\r\nFigure 80: rockthemes\r\n\r\n\r\n\r\nrtist\r\n\r\n\r\n\r\nFigure 81: rtist\r\n\r\n\r\n\r\nseverance\r\n\r\n\r\n\r\nFigure 82: severance\r\n\r\n\r\n\r\nsoilpalettes\r\n\r\n\r\n\r\nFigure 83: soilpalettes\r\n\r\n\r\n\r\nsuffrager\r\n\r\n\r\n\r\nFigure 84: suffrager\r\n\r\n\r\n\r\ntayloRswift\r\n\r\n\r\n\r\nFigure 85: tayloRswift\r\n\r\n\r\n\r\ntidyquant\r\n\r\n\r\n\r\nFigure 86: tidyquant\r\n\r\n\r\n\r\ntrekcolors\r\n\r\n\r\n\r\n\r\n\r\n\r\nFigure 87: trekcolors\r\n\r\n\r\n\r\ntvthemes\r\n\r\n\r\n\r\n\r\n\r\n\r\nFigure 88: tvthemes\r\n\r\n\r\n\r\nunikn\r\n\r\n\r\n\r\nFigure 89: unikn\r\n\r\n\r\n\r\nvangogh\r\n\r\n\r\n\r\nFigure 90: vangogh\r\n\r\n\r\n\r\nvapeplot\r\n\r\n\r\n\r\nFigure 91: vapeplot\r\n\r\n\r\n\r\nvapoRwave\r\n\r\n\r\n\r\nFigure 92: vapoRwave\r\n\r\n\r\n\r\nwaRhol\r\n\r\n\r\n\r\nFigure 93: waRhol\r\n\r\n\r\n\r\nwerpals\r\n\r\n\r\n\r\nFigure 94: werpals\r\n\r\n\r\n\r\nwesanderson\r\n\r\n\r\n\r\nFigure 95: wesanderson\r\n\r\n\r\n\r\nyarrr\r\n\r\n\r\n\r\nFigure 96: yarrr\r\n\r\n\r\n\r\n\r\nReturn to Figures\r\n\r\npbapply\r\n\r\nA lightweight package that adds progress bar to vectorized R functions (apply). The implementation can easily be added to functions where showing the progress is useful (e.g. bootstrap). The type and style of the progress bar (with percentages or remaining time) can be set through options. The package supports several parallel processing backends, such as snow-type clusters, multicore-type forking, and future.\r\n\r\nSource: pbapply\r\n\r\n\r\nPrior to using the pbapply (Solymos and Zawadzki 2023) package, it is important you learn how to vectorize/parallelize your data. The author wrote a complementary step-by-step guide on how to do so titled the road to progress.\r\npbapply website\r\npbapply article: how to get started \r\npbapply article: how to add pbapply to a package\r\npbapply article: examples\r\npbapply functions\r\npbapply reference manual\r\n\r\nReturn to Figures\r\n\r\nplot3D\r\nPlotting Multi-Dimensional Data\r\n\r\n(Soetaert 2024) Functions for viewing 2-D and 3-D data, including perspective plots, slice plots, surface plots, scatter plots, etc. Includes data sets from oceanography.\r\n\r\nSource: plot3D\r\n\r\n\r\n\r\n\r\n\r\nFigure 97: plot3D example\r\n\r\n\r\n\r\nplot3D tutorial\r\nplot3D R for Science article\r\nplot3D reference manual\r\n\r\nReturn to Figures\r\n\r\nplotrix\r\n\r\nplotrix (J 2006) is an R package that provides many plotting, labeling, and axis & color scaling functions.\r\n\r\nSource: plotrix \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nFigure 98: plotrix examples\r\n\r\n\r\n\r\nplotrix website\r\nplotrix functions\r\nplotrix GitHub\r\nplotrix reference manual\r\n\r\nReturn to Figures\r\n\r\nshiny\r\nWeb Application Framework for R\r\n\r\n(Chang et al. 2024) Makes it incredibly easy to build interactive web applications with R. Automatic “reactive” binding between inputs and outputs and extensive prebuilt widgets make it possible to build beautiful, responsive, and powerful applications with minimal effort.\r\n\r\nSource: shiny\r\n\r\n\r\nshiny website\r\nshiny article hub\r\nshiny article: shiny basics\r\nshiny article: build an app\r\nshiny article: shinyapps.io\r\nshiny reference manual\r\nMastering shiny: build interactive apps, reports, & dashboards powered by R by Hadley Wickham\r\n\r\n\r\n\r\n\r\n\r\n\r\nFigure 99: shiny cheatsheet\r\n\r\n\r\n\r\n\r\nReturn to Figures\r\n\r\nshowtext\r\nUsing Fonts More Easily in R Graphs\r\n\r\n(Qiu 2024) Making it easy to use various types of fonts (‘TrueType’, ‘OpenType’, Type 1, web fonts, etc.) in R graphs, and supporting most output formats of R graphics including PNG, PDF and SVG. Text glyphs will be converted into polygons or raster images, hence after the plot has been created, it no longer relies on the font files. No external software such as ‘Ghostscript’ is needed to use this package.\r\n\r\nSource: showtext\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nFigure 100: showtext example \r\n\r\n\r\n\r\n\r\nshowtext website\r\nshowtext GitHub\r\nshowtext reference manual\r\n\r\nReturn to Figures\r\n\r\nFisheries Packages\r\nPackage\r\nSection Link\r\nPurpose\r\nBayesGrowth\r\nlink to BayesGrowth\r\nlength-at-age growth curves\r\nCatDyn\r\nlink to CatDyn\r\nstock assessment by catch models\r\nFESta\r\nlink to FESta\r\nfishing effort standardization\r\nfishMod\r\nlink to fishMod\r\nfits models to CPUE data\r\nFSA\r\nlink to FSA\r\nFisheries Stock Assessment\r\nggFishPlots\r\nlink to ggFishPlots\r\nvisualize life history parameters\r\nRFishBC\r\nlink to RFishBC\r\nback-calculation of fish length\r\nBayesGrowth\r\nEstimate fish growth using MCMC analysis\r\n\r\nBayesGrowth (Smart 2023) (Smart and Grammer 2021) combines length-at-age modelling for fisheries with MCMC implemented using Stan and the rstan package. Growth modelling using models such as the von Bertalanffy growth model involves three parameters: L∞, k and either L0 or t0. Two of these parameters: L0 and L∞ have direct biological meaning as the size-at-birth and maximum length, respectively. This package provides the tools to run an MCMC model with these two parameters treated as size-at-birth and maximum length using a rstan model with a No U-Turn Sampling (NUTS) algorithm. This MCMC model is pre-specified and built into wrapper functions.\r\nThe user can therefore run an MCMC growth model using knowledge of species length-at-birth and maximum size as priors.\r\n\r\nSource: BayesGrowth\r\n\r\n\r\nBayesGrowth website\r\nBayesGrowth reference manual\r\n\r\nReturn to Fisheries Packages\r\n\r\nCatDyn\r\nFishery Stock Assessment by Catch Dynamics Models\r\n\r\nBased on fishery Catch Dynamics instead of fish Population Dynamics (hence CatDyn) (Roa-Ureta 2011) (Roa-Ureta 2015) (Roa-Ureta et al. 2015) (Lin et al. 2017) and using high-frequency or medium-frequency catch in biomass or numbers, fishing nominal effort, and mean fish body weight by time step, from one or two fishing fleets, estimate stock abundance, natural mortality rate, and fishing operational parameters. It includes methods for data organization, plotting standard exploratory and analytical plots, predictions, for 100 types of models of increasing complexity, and 72 likelihood models for the data.\r\n\r\nSource: CatDyn\r\n\r\n\r\nCatDyn article: overview\r\nCatDyn reference manual\r\n\r\nReturn to Fisheries Packages\r\n\r\nFESta\r\nFishing Effort Standardisation (Varghese, T V, and J 2020)\r\n\r\nOriginal idea was presented in the reference paper. Varghese et al. (2020, 74(1):35-42) “Bayesian State-space Implementation of Schaefer Production Model for Assessment of Stock Status for Multi-gear Fishery”. Marine fisheries governance and management practices are very essential to ensure the sustainability of the marine resources. A widely accepted resource management strategy towards this is to derive sustainable fish harvest levels based on the status of marine fish stock. Various fish stock assessment models that describe the biomass dynamics using time series data on fish catch and fishing effort are generally used for this purpose. In the scenario of complex multi-species marine fishery in which different species are caught by a number of fishing gears and each gear harvests a number of species make it difficult to obtain the fishing effort corresponding to each fish species. Since the capacity of the gears varies, the effort made to catch a resource cannot be considered as the sum of efforts expended by different fishing gears. This necessitates standardisation of fishing effort in unit base.\r\n\r\nSource: FESta\r\n\r\n\r\nFESta reference manual\r\n\r\nReturn to Fisheries Packages\r\n\r\nfishMod\r\nFits Poisson-Sum-of-Gammas GLMs, Tweedie GLMs, and Delta Log-Normal Models\r\n\r\n(Foster 2024) Fits models to catch and effort data. Single-species models are\r\ndelta log-normal\r\nTweedie, or\r\nPoisson-gamma (G)LMs.\r\n\r\nSource: fishMod\r\n\r\n\r\nfishMod website\r\nfishMod article: help manuals\r\nfishMod article: how to use\r\nfishMod reference manual\r\n\r\nReturn to Fisheries Packages\r\n\r\nFSA\r\nFisheries Stock Assessment\r\n\r\nThe FSA (Ogle et al. 2025) package provides R functions to conduct typical introductory fisheries analyses. Example analyses that use FSA can be found in the Introductory Fisheries Analyses with R book (see note below) and on the fishR website.\r\n\r\nSource: FSA\r\n\r\n\r\nFSA website\r\nFSA functions\r\nFSA reference manual\r\n\r\nReturn to Fisheries Packages\r\n\r\nggFishPlots\r\nVisualise and calculate life history parameters for fisheries science\r\n\r\nAt the time of writing, the package (Vihtakari 2024) produces four kinds of plots: growth curves, maturity plots, length-weight relationships, and catch curves. Each function returns a ggplot2 plot and the estimated parameters as a text string that can be used in Rmarkdown and Shiny applications as well as a data frame for further use of the parameters. The elements are returned as a list. The package contains example data to illustrate the functionality.\r\n\r\nSource: ggFishPlots\r\n\r\n\r\nggFishPlots website\r\nggFishPlots reference manual\r\n\r\nReturn to Fisheries Packages\r\n\r\nRFishBC\r\nBack-Calculation of Fish Length\r\n\r\nHelps fisheries scientists collect measurements from calcified\r\nstructures and back-calculate estimated lengths at previous ages using\r\nstandard procedures and models. This is intended to replace much of the\r\nfunctionality provided by the now out-dated ‘fishBC’ software\r\n(https://fisheries.org/bookstore/all-titles/software/70317/). (Ogle 2023)\r\n\r\nSource: RFishBC\r\n\r\n\r\nRFishBC website\r\nRFishBC article: short introduction to back-calculation\r\nRFishBC article: collect radial measurements from a calcified structure by interactively selecting annuli\r\nRFishBC article: visualize points selected on a calcified structure\r\nRFishBC article: compute back-calculated lengths\r\nRFishBC article: suggested workflow for back-calculation\r\nRFishBC reference manual\r\n\r\nReturn to Fisheries Packages\r\n\r\nGeospatial Packages\r\nPackage\r\nSection Link\r\nPurpose\r\nleaflet\r\nlink to leaflet\r\ncreate interactive maps\r\nmaps/mapdata\r\nlink to maps/mapdata\r\ncreate maps with overlaid rivers\r\nrayshader\r\nlink to rayshader\r\ncreate 2D and 3D maps\r\nsf\r\nlink to sf\r\nwork with spatial data\r\ntmap\r\nlink to tmap\r\ncreate thematic maps\r\nleaflet\r\n\r\nLeaflet is one of the most popular open-source JavaScript libraries for interactive maps. It’s used by websites ranging from The New York Times and The Washington Post to GitHub and Flickr, as well as GIS specialists like OpenStreetMap, Mapbox, and CartoDB.\r\nThis R package (Cheng et al. 2024) makes it easy to integrate and control Leaflet maps in R.\r\n\r\nSource: leaflet\r\n\r\n\r\n\r\n\r\n\r\nLeaflet website\r\nleaflet package website\r\nleaflet article: the map widget \r\nleaflet article: colors\r\nleaflet article: popups and labels\r\nleaflet reference manual\r\n\r\nReturn to Geospatial Packages\r\n\r\nmaps/mapdata\r\n\r\nDisplay of maps. Projection code and larger maps are in separate packages (‘mapproj’ and ‘mapdata’).\r\n\r\nSource: maps\r\n\r\n\r\nmaps (Richard A. Becker, Ray Brownrigg. Enhancements by Thomas P Minka, and Deckmyn. 2024) includes maps of the USA, Canada, and other countries with various add-ons available (such as cities, counties, etc.) and also a database of lakes around the world.\r\nmapdata (Richard A. Becker and Ray Brownrigg. 2022) is an add-on package that provides information for additional countries and also rivers.\r\n\r\n\r\n\r\nFigure 101: maps\r\n\r\n\r\n\r\nuse the maps, mapdata and oz packages to get most common boundaries\r\ntutorial: making maps with R\r\nmaps reference manual\r\nmapdata reference manual\r\n\r\nReturn to Geospatial Packages\r\n\r\nrayshader\r\n\r\nrayshader (Morgan-Wall 2025) is an open source package for producing 2D and 3D data visualizations in R. rayshader uses elevation data in a base R matrix and a combination of raytracing, hillshading algorithms, and overlays to generate stunning 2D and 3D maps. In addition to maps, rayshader also allows the user to translate ggplot2 objects into beautiful 3D data visualizations.\r\nThe models can be rotated and examined interactively or the camera movement can be scripted to create animations. Scenes can also be rendered using a high-quality pathtracer, rayrender. The user can also create a cinematic depth of field post-processing effect to direct the user’s focus to important regions in the figure. The 3D models can also be exported to a 3D-printable format with a built-in STL export function, and can be exported to an OBJ file.\r\n\r\nSource: rayshader\r\n\r\n\r\n\r\n\r\n\r\nFigure 102: rayshader example\r\n\r\n\r\n\r\nrayshader website\r\nrayshader reference manual\r\n\r\nReturn to Geospatial Packages\r\n\r\nsf\r\n\r\nPackage sf (Pebesma and Bivand 2023) :\r\nrepresents simple features as records in a data.frame or tibble with a geometry list-column\r\nrepresents natively in R all 17 simple feature types for all dimensions (XY, XYZ, XYM, XYZM)\r\ninterfaces to GEOS for geometrical operations on projected coordinates, and (through R package s2) to s2geometry for geometrical operations on ellipsoidal coordinates\r\ninterfaces to GDAL, supporting all driver options, Date and POSIXct and list-columns\r\ninterfaces to PRØJ for coordinate reference system conversion and transformation >\r\nuses well-known-binary serialisations written in C++/Rcpp for fast I/O with GDAL and GEOS\r\nreads from and writes to spatial databases such as PostGIS using DBI\r\nis extended by\r\nlwgeom for selected liblwgeom/PostGIS functions\r\nstars for raster data, and raster or vector data cubes (spatial time series)\r\nsfnetworks for geospatial network data\r\n\r\nSource: sf\r\n\r\n\r\nsf website\r\nsf functions\r\nsf article: simple features for R\r\nsf article: reading, writing, and converting simple Features\r\nsf article: manipulating simple feature geometries\r\nsf article: manipulating simple features\r\nsf article: plotting simple figures\r\nsf article: miscellaneous\r\nsf article: spherical geometry in sf using s2geometry\r\nsf reference manual\r\n\r\n\r\n\r\n\r\n\r\n\r\nFigure 103: sf cheatsheet\r\n\r\n\r\n\r\n\r\n\r\nReturn to Geospatial Packages\r\n\r\ntmap\r\nthematic maps in R\r\n\r\ntmap (Tennekes 2018) is an R package for drawing thematic maps. The API is based on A Layered Grammar of Graphics and resembles the syntax of ggplot2, a popular R-library for drawing charts.\r\n\r\nSource: tmap\r\n\r\n\r\n\r\n\r\n\r\nFigure 104: tmap\r\n\r\n\r\n\r\ntmap website\r\ntmap article: foundations - grammar of graphics\r\ntmap article: foundations - map projections (crs)\r\ntmap article: visual variables\r\ntmap article: scales\r\ntmap article: legends\r\ntmap article: basemaps\r\ntmap article: tmap versus mapsf\r\ntmap article: positioning components\r\ntmap article: margins and aspect ratio\r\ntmap reference manual\r\n\r\nReturn to Geospatial Packages\r\n\r\nMiscellaneous\r\nPackage\r\nSection Link\r\nPurpose\r\nEchoviewR\r\nlink to EchoviewR\r\nEchoview and R interface\r\nrticles\r\nlink to rticles\r\nformat articles for publication\r\ntinytex\r\nlink to tinytex\r\nenables LaTeX coding in R\r\nEchoviewR\r\n\r\nEchoviewR (Harrison et al. 2015) is a free and extensive software package that acts as an interface between R and Echoview, developed by the Australian Antarctic Division.\r\n\r\nSource: Echoview\r\n\r\n\r\nEchoviewR website\r\nEchoviewR article: getting started\r\nEchoviewR article: basic functionality\r\nEchoviewR article: broadband single targets\r\n\r\nReturn to Miscellaneous Packages\r\n\r\nrticles\r\n\r\nThe rticles (Allaire et al. 2024) package provides a suite of custom R Markdown LaTeX formats and templates for various formats. Most of the templates are provided and maintained by the community, and anyone can contribute a new template.\r\n\r\nSource: rticles\r\n\r\n\r\nThis package is helpful in formatting articles for publication in scientific journals without having to manually reformat all your citations. In particular it may be helpful if you want to publish in PLOS, PNAS, or PeerJ but a full list of journals available is listed below.\r\nUsage\r\n\r\nTo use rticles from RStudio, you can access the templates through File -> New File -> R Markdown. This will open the dialog box where you can select from one of the available templates…\r\nYou can also get the list of available journal names with rticles::journals().\r\nACM\r\nACS\r\nAEA\r\nAGU\r\nAJS\r\nAMQ\r\nAMS\r\nARXIV\r\nASA\r\nBioinf.\r\nBiomet.\r\nCopernic.\r\nCTEX\r\nElsevier\r\nfrontiers\r\nglossa\r\nIEEE\r\nIMS\r\nInforms\r\nIOP\r\nISBA\r\nJASA\r\nJEDM\r\nJOSS\r\nJSS\r\nLIPICS\r\nLNCS\r\nMDPI\r\nMNRAS\r\nOUP_v0\r\nOUP_v1\r\nPeerJ\r\nPIHPH\r\nPLOS\r\nPNAS\r\nR Journal\r\nRSOS\r\nRSS\r\nSAGE\r\nSIM\r\nSpringer\r\nTF\r\nTRB\r\nWellcom.\r\n\r\n\r\n\r\n\r\n\r\n\r\n… LaTeX templates are used to ensure that documents conform precisely to submission standards.\r\n\r\nSource:  rticles\r\n\r\n\r\nrticles website\r\nrticles article: get started\r\nrticles article: available templates\r\nrticles article: examples of journal templates\r\nrticles website\r\ndebugging LaTeX to PDF\r\nstep-by-step guide to address errors if your desired template doesn’t knit properly.\r\n\r\nReturn to Miscellaneous Packages\r\n\r\ntinytex\r\n\r\ntinytex (Xie 2024) (Xie 2019) is a custom LaTeX distribution based on TeX Live that is small in size, but functions well in most cases, especially for R users. If you run into the problem of missing LaTeX packages, it should be super clear to you what you need to do (in fact, R users won’t need to do anything). You only install LaTeX packages you actually need.\r\n\r\nSource: TinyTeX\r\n\r\n\r\nThis package allows .Rmd files to be exported as PDF documents. It is also necessary if you want to use the rticles package to format articles for publication.\r\ntinytex website\r\ntinytex article: motivation\r\ntinytex article: FAQs\r\ntinytex article: compile LaTeX documents\r\ntinytex article: debugging\r\ntinytex reference manual\r\n\r\nReturn to Miscellaneous Packages\r\n\r\nStatistics\r\nAICcmodavg\r\nModel Selection and Multimodel Inference Based on (Q)AIC(c)\r\n\r\n(Mazerolle 2023) Functions to implement model selection and multimodel inference based on Akaike’s information criterion (AIC) and the second-order AIC (AICc), as well as their quasi-likelihood counterparts (QAIC, QAICc) from various model object classes. The package implements classic model averaging for a given parameter of interest or predicted values, as well as a shrinkage version of model averaging parameter estimates or effect sizes. The package includes diagnostics and goodness-of-fit statistics for certain model types including those of ‘unmarkedFit’ classes estimating demographic parameters after accounting for imperfect detection probabilities. Some functions also allow the creation of model selection tables for Bayesian models of the ‘bugs’, ‘rjags’, and ‘jagsUI’ classes. Functions also implement model selection using BIC. Objects following model selection and multimodel inference can be formatted to LaTeX using xtable methods included in the package.\r\n\r\nSource: AICcmodavg\r\n\r\n\r\nAICcmodavg functions\r\nAICcmodavg reference manual\r\nvignette: model selection and multimodal inference using the AICmodavg package\r\nvignette: example session of model selection tools and diagnostics for model fit with the unmarked package\r\n\r\n\r\nReturn to Statistics Packages\r\n\r\nbbmle\r\nTools for General Maximum Likelihood Estimation\r\n\r\n(Bolker and R Development Core Team 2025) Methods and functions for fitting maximum likelihood models in R. This package modifies and extends the mle classes in the stats4 package.\r\n\r\nSource: bbmle\r\n\r\n\r\nbbmle website\r\nbbmle reference manual\r\nbbmle article: dealing with quasi models in R\r\nbbmle article: maximum likelihood estimation and analysis with the bbmle package\r\n\r\nReturn to Statistics Packages\r\n\r\nDHARMa\r\nResidual Diagnostics for Hierarchical (Multi-Level / Mixed) Regression Models\r\n\r\nThe DHARMa (Hartig 2024) package uses a simulation-based approach to create readily interpretable scaled (quantile) residuals for fitted (generalized) linear mixed models. Currently supported are linear and generalized linear (mixed) models from lme4 (classes ‘lmerMod’, ‘glmerMod’), glmmTMB, GLMMadaptive, and spaMM; phylogenetic linear models from ‘phylolm’ (classes ‘phylolm’ and ‘phyloglm’); generalized additive models (‘gam’ from ‘mgcv’); ‘glm’ (including ‘negbin’ from ‘MASS’, but excluding quasi-distributions) and ‘lm’ model classes. Moreover, externally created simulations, e.g. posterior predictive simulations from Bayesian software such as ‘JAGS’, ‘STAN’, or ‘BUGS’ can be processed as well. The resulting residuals are standardized to values between 0 and 1 and can be interpreted as intuitively as residuals from a linear regression. The package also provides a number of plot and test functions for typical model misspecification problems, such as over/underdispersion, zero-inflation, and residual spatial, phylogenetic and temporal autocorrelation.\r\n\r\nSource: DHARMa\r\n\r\n\r\nDHARMa website\r\nDHARMa reference manual\r\nDHARMa article: for Bayesians\r\nDHARMa article: residual diagnositics for hierarchical (multi-level/mixed) regression models\r\n\r\nReturn to Statistics Packages\r\n\r\nemmeans\r\nEstimated Marginal Means, aka Least-Squares Means\r\n\r\nObtain estimated marginal means (EMMs) (Lenth 2024) for many linear, generalized linear, and mixed models. Compute contrasts or linear functions of EMMs, trends, and comparisons of slopes. Plots and other displays. Least-squares means are discussed, and the term “estimated marginal means” is suggested, in Searle, Speed, and Milliken (1980) Population marginal means in the linear model: An alternative to least squares means, The American Statistician 34(4), 216-221 doi:10.1080/00031305.1980.10483031.\r\n\r\nSource: emmeans\r\n\r\n\r\nemmeans website\r\nemmeans article: quick start guide\r\nemmeans article: basics of estimated marginal means\r\nemmeans article: comparisons and contrasts\r\nemmeans article: confidence intervals and tests\r\nemmeans FAQs\r\nemmeans index of vignette topics\r\nemmeans reference manual\r\n\r\nReturn to Statistics Packages\r\n\r\ngamlss\r\nGeneralized Additive Models for Location Scale and Shape\r\n\r\n01. What is GAMLSS (R. A. Rigby and D. M. Stasinopoulos 2005)\r\nGAMLSS are distributional regression models. In classical regression models, the explanatory variables, X, affect the expected value of the response y, X -> E(y). In a distributional regression the X’s effects all parts of the distribution of y, X -> D(y). The GAMLSS models are appropriate when the focus of the study is not only shifts in the mean (or location) of the distribution for y but possibly other parts like the variance (volatility), the skewness, the kurtosis (heavy tails), the quantiles. All aspects of the the distribution of the response can be modelled as functions of the explanatory variables.\r\n03. What distributions can be used within GAMLSS\r\nGAMLSS provide over 100 continuous, discrete and mixed distributions for modelling the response variable. Truncated, censored (interval response), log and logit transformed and finite mixture versions of these distributions can be also used.\r\n>\r\n\r\nSource: gamlss\r\n\r\n\r\ngamlss website\r\ngamlss: generalized additive models for location scale and shape\r\ngamlss R packages reference card\r\ngamlss reference manual\r\n\r\nReturn to Statistics Packages\r\n\r\nglmmTMB\r\nFitting Generalized Linear Mixed Models (GLMMs) using Template Model Builder (TMB)\r\n\r\nglmmTMB (Brooks et al. 2017) is an R package built on the Template Model Builder automatic\r\ndifferentiation engine, for fitting generalized linear mixed models and extensions.\r\n\r\nSource: glmmTMB\r\n\r\n\r\nResponse Distributions\r\n- Gaussian - binomial - beta-binomial - Poisson - negative binomial (NB1 and NB2 parameterizations) - Conway-Maxwell-Poisson - generalized Poisson - Gamma - Beta - Tweedie - zero-truncated Poisson \r\nUsage\r\n\r\nIn order to use glmmTMB effectively you should already be reasonably familiar with generalized linear mixed models (GLMMs), which in turn requires familiarity with (i) generalized linear models (e.g. the special cases of logistic, binomial, and Poisson regression) and (ii) ‘modern’ mixed models (those\r\nworking via maximization of the marginal likelihood rather than by manipulating sums of squares). Bolker et al. (2009) and Bolker (2015) are reasonable starting points in this area (especially geared to biologists and less-technical readers), as are Zuur et al. (2009), Millar (2011), and Zuur et al. (2013).\r\nIn order to fit a model in glmmTMB you need to:\r\nspecify a model for the conditional effects, in the standard R (Wilkinson-Rogers) formula notation (see ?formula or Section 11.1 of the Introduction to R. Formulae can also include offsets.)\r\nspecify a model for the random effects, in the notation that is common to the nlme and lme4 packages. Random effects are specified as x|g, where x is an effect and g is a grouping factor (which must be a factor variable, or a nesting of/interaction among factor variables)….\r\nchoose the error distribution by specifying the family (family argument). In general, you can specify the function (binomial, gaussian, poisson, Gamma from base R, or one of the options listed at family glmmTMB [nbinom2, beta family(), betabinomial, …])).\r\nchoose the error distribution by specifying the family (family argument).\r\n\r\nSource: glmmTMB\r\n\r\n\r\nglmmTMB GitHub Page\r\nglmmTMB reference manual\r\nglmmTMB: fit models with TMB\r\nglmmTMB article: GLMM Worked Examples\r\ntutorial with examples and a breakdown of what the code is doing.\r\n\r\nReturn to Statistics Packages\r\n\r\nlme4\r\nLinear Mixed-Effects Models using ‘Eigen’ and S4\r\n\r\nFit linear and generalized linear mixed-effects models. The models and their components are represented using S4 classes and methods. The core computational algorithms are implemented using the ‘Eigen’ C++ library for numerical linear algebra and ‘RcppEigen’ “glue”. (Bates et al. 2015)\r\n\r\nSource: lme4\r\n\r\n\r\nlme4 website\r\nlme4 article: computational methods for mixed models\r\nlme4 article: fitting linear mixed-effects models using lme4\r\nlme4 article: lme4 performance tips\r\nlme4 article: penalized least squares versus generalized least squares representations of linear mixed models\r\nlme4 reference manual\r\n\r\nReturn to Statistics Packages\r\n\r\nTables\r\nPackage\r\nSection Link\r\nPurpose\r\nDT\r\nlink to DT\r\nsort and filter data tables\r\ngtsummary\r\nlink to gtsummary\r\nanalytical and summary tables\r\nDT\r\nAn R interface to the DataTables library\r\n\r\nThe R package DT (Xie, Cheng, and Tan 2024) provides an R interface to the JavaScript library DataTables. R data objects (matrices or data frames) can be displayed as tables on HTML pages, and DataTables provides filtering, pagination, sorting, and many other features in the tables.\r\n\r\nSource: DT\r\n\r\n\r\nDT website\r\nDT article: options\r\nDT reference manual\r\nDT citation\r\n\r\nXie Y, Cheng J, Tan X (2024). DT: A Wrapper of the JavaScript Library\r\n‘DataTables’. R package version 0.33, https://CRAN.R-project.org/package=DT.\r\n\r\nBibTeX entry\r\n\r\n\r\n\r\n\r\nReturn to Tables Packages\r\n\r\ngtsummary\r\n\r\nThe gtsummary (D. D. Sjoberg et al. 2021) package provides an elegant and flexible way to create publication-ready analytical and summary tables using the R programming language. The gtsummary package summarizes data sets, regression models, and more, using sensible defaults with highly customizable capabilities.\r\n\r\nSource: gtsummary\r\n\r\n\r\n\r\n\r\n\r\nFigure 105: gtsummary\r\n\r\n\r\n\r\ngtsummary website\r\ngtsummary article: themes\r\ngtsummary article: gtsummary + Quarto/Rmarkdown\r\ngtsummary reference manual\r\n\r\n\r\n\r\n\r\n\r\n\r\nFigure 106: gtsummary cheatsheet\r\n\r\n\r\n\r\n\r\n\r\nReturn to Tables Packages\r\n\r\nTelemetry\r\nPackage\r\nSection Link\r\nPurpose\r\nactel\r\nlink to actel\r\nacoustic telemetry package\r\nadehabitatHR\r\nlink to adehabitatHR\r\nhome range estimation\r\nadehabitatHS\r\nlink to adehabitatHS\r\nhabitat selection analysis\r\nadehabitatLT\r\nlink to adehabitatLT\r\nanimal movement analysis\r\nadehabitatMA\r\nlink to adehabitatMA\r\nraster map manipulation\r\namt\r\nlink to amt\r\nanimal movement analysis\r\nm2b\r\nlink to m2b\r\nbehavior prediction\r\nsftrack\r\nlink to sftrack\r\ntracking and movement data\r\nSiMRiv\r\nlink to SiMRiv\r\nsimulating movements in Rivers\r\nwildlifeDI\r\nlink to wildlifeDI\r\ndynamic interaction indices\r\n\r\nactel\r\n\r\nDesigned for studies where animals tagged with acoustic tags are expected to move through receiver arrays. Combines the advantages of automatic sorting and checking of animal movements with the possibility for user intervention on tags that deviate from expected behaviour. (Flavio and Baktoft 2021)\r\n\r\nSource: actel\r\n\r\n\r\n\r\n\r\n\r\nFigure 107: actel\r\n\r\n\r\n\r\nactel website\r\nactel user guide\r\nactel reference manual\r\n\r\nReturn to Telemetry Packages\r\n\r\nadehabitatHR\r\nHome Range Estimation\r\n\r\nA collection of tools for the estimation of animals home range. (Calenge 2024a)\r\n\r\nSource: adehabitatHR\r\n\r\n\r\n\r\n\r\n\r\nFigure 108: adehabitatHR example\r\n\r\n\r\n\r\nadehabitatHR website\r\nadehabitatHR article: home range estimation\r\nadehabitatHR reference manual\r\n\r\nReturn to Telemetry Packages\r\n\r\nadehabitatHS\r\nAnalysis of Habitat Selection by Animals\r\n\r\nA collection of tools for the analysis of habitat selection. (Calenge 2024b)\r\n\r\nSource: adehabitatHS\r\n\r\n\r\n\r\n\r\n\r\nFigure 109: adehabitatHS example\r\n\r\n\r\n\r\nadehabitatHS website\r\nadehabitatHS article: exploratory analysis of the habitat selection by the wildlife in R\r\nadehabitatHS reference manual\r\n\r\nReturn to Telemetry Packages\r\n\r\nadehabitatLT\r\nAnalysis of Animal Movements\r\n\r\nA collection of tools for the analysis of animal movements. (Calenge 2024c)\r\n\r\nSource: adehabitatLT\r\n\r\n\r\nadehabitatLT website\r\nadehabitatLT article: help index\r\nadehabitatLT reference manual\r\nAnalysis of Animal Movements in R: the adehabitatLT package\r\n\r\nReturn to Telemetry Packages\r\n\r\nadehabitatMA\r\nTools to Deal with Raster Maps\r\n\r\nA collection of tools to deal with raster maps. (Calenge 2024d)\r\n\r\nSource: adehabitatMA\r\n\r\n\r\nadehabitatMA website\r\nadehabitatMA article: tools for the analysis of mapped data \r\nadehabitatMA reference manual\r\n\r\nReturn to Telemetry Packages\r\n\r\namt\r\nAnimal Movement Tools\r\n\r\nManage and analyze animal movement data. The functionality of amt (Signer, Fieberg, and Avgar 2019) includes methods to calculate home ranges, track statistics (e.g. step lengths, speed, or turning angles), prepare data for fitting habitat selection analyses, and simulation of space-use from fitted step-selection functions.\r\n\r\nSource: amt\r\n\r\n\r\n\r\n\r\n\r\nFigure 110: amt example\r\n\r\n\r\n\r\namt website\r\namt article: getting started\r\namt article: calculating home-range overlaps with amt\r\namt article: used habitat calibration plots\r\namt help manuals\r\namt reference manual\r\n\r\nReturn to Telemetry Packages\r\n\r\nm2b\r\nMovement to Behaviour Inference using Random Forest\r\n\r\nPrediction of behaviour from movement characteristics using observation and random forest for the analyses of movement data in ecology. From movement information (speed, bearing…) the model predicts the observed behaviour (movement, foraging…) using random forest. The model can then extrapolate behavioural information to movement data without direct observation of behaviours. The specificity of this method relies on the derivation of multiple predictor variables from the movement data over a range of temporal windows. This procedure allows to capture as much information as possible on the changes and variations of movement and ensures the use of the random forest algorithm to its best capacity. The method is very generic, applicable to any set of data providing movement data together with observation of behaviour. (Dubroca and Thiebault 2017)\r\n\r\nSource: m2b\r\n\r\n\r\nm2b website\r\nm2b article: tutorial\r\nm2b reference manual\r\n\r\nReturn to Package Overview Table\r\n\r\nsftrack\r\n\r\nsftrack (Boone, Joo, and Basille 2023) provides modern classes for tracking and movement data, relying on sf spatial infrastructure. Tracking data are made of tracks, i.e. series of locations with at least 2-dimensional spatial coordinates (x,y), a time index (t), and individual identification (id) of the object being monitored; movement data are made of trajectories, i.e. the line representation of the path, composed by steps (the straight-line segments connecting successive locations). sftrack is designed to handle movement of both living organisms and inanimate objects.\r\n\r\nSource: sftrack\r\n\r\n\r\n\r\n\r\n\r\nFigure 111: sftrack example\r\n\r\n\r\n\r\nsftrack website\r\nsftrack article: overview\r\nsftrack article: reading in an sftrack\r\nsftrack article: structure of sftrack/sftraj objects\r\nsftrack article: fantastic groups and how to use them\r\nsftrack article: getting spatial with sftrack\r\nsftrack reference manual\r\n\r\nReturn to Telemetry Packages\r\n\r\nSiMRiv\r\nSimulating Multistate Movements in River/Heterogeneous Landscapes\r\n\r\nProvides functions to generate and analyze spatially-explicit individual-based multistate movements in rivers, heterogeneous and homogeneous spaces. This is done by incorporating landscape bias on local behaviour, based on resistance rasters. Although originally conceived and designed to simulate trajectories of species constrained to linear habitats/dendritic ecological networks (e.g. river networks), the simulation algorithm is built to be highly flexible and can be applied to any (aquatic, semi-aquatic or terrestrial) organism, independently on the landscape in which it moves. Thus, the user will be able to use the package to simulate movements either in homogeneous landscapes, heterogeneous landscapes (e.g. semi-aquatic animal moving mainly along rivers but also using the matrix), or even in highly contrasted landscapes (e.g. fish in a river network). The algorithm and its input parameters are the same for all cases, so that results are comparable. Simulated trajectories can then be used as mechanistic null models (Potts & Lewis 2014, doi:10.1098/rspb.2014.0231) to test a variety of ‘Movement Ecology’ hypotheses (Nathan et al. 2008, doi:10.1073/pnas.0800375105), including landscape effects (e.g. resources, infrastructures) on animal movement and species site fidelity, or for predictive purposes (e.g. road mortality risk, dispersal/connectivity). The package should be relevant to explore a broad spectrum of ecological phenomena, such as those at the interface of animal behaviour, management, landscape and movement ecology, disease and invasive species spread, and population dynamics. (Quaglietta and Porto 2024)\r\n\r\nSource: SiMRiv\r\n\r\n\r\n\r\n\r\n\r\nFigure 112: SiMRiv example\r\n\r\n\r\n\r\nSiMRiv website\r\nSiMRiv article: usage of the SiMRiv package\r\nSiMRiv help manuals\r\nSiMRiv reference manual\r\n\r\nReturn to Telemetry Packages\r\n\r\nwildlifeDI\r\nCalculate Indices of Dynamic Interaction for Wildlife Tracking Data\r\n\r\nDynamic interaction refers to spatial-temporal associations in the movements of two (or more) animals. This package provides tools for calculating a suite of indices used for quantifying dynamic interaction with wildlife telemetry data. For more information on each of the methods employed see the references within. The package (as of version >= 0.3) also has new tools for automating contact analysis in large tracking datasets. The package (as of version 1.0) uses the ‘move2’ class of objects for working with tracking dataset. (Long et al. 2014) (Long et al. 2022)\r\n\r\nSource: wildlifeDI\r\n\r\n\r\nwildlifeDI website\r\nwildlifeDI article: contact analysis workflow\r\nwildlifeDI article: analysis of dynamic interaction patterns in wildlife tracking data\r\n\r\nReturn to Top\r\n\r\n\r\n\r\n\r\nAllaire, JJ, Yihui Xie, Christophe Dervieux, R Foundation, Hadley Wickham, Journal of Statistical Software, Ramnath Vaidyanathan, et al. 2024. Rticles: Article Formats for r Markdown. https://CRAN.R-project.org/package=rticles.\r\n\r\n\r\nArnold, Jeffrey B. 2024. Ggthemes: Extra Themes, Scales and Geoms for ’Ggplot2’. https://jrnold.github.io/ggthemes/.\r\n\r\n\r\nBates, Douglas, Martin Machler, Ben Bolker, and Steve Walker. 2015. “Fitting Linear Mixed-Effects Models Using lme4.” Journal of Statistical Software 67 (1): 1–48. https://doi.org/10.18637/jss.v067.i01.\r\n\r\n\r\nBolker, Ben, and R Development Core Team. 2025. Bbmle: Tools for General Maximum Likelihood Estimation. https://github.com/bbolker/bbmle.\r\n\r\n\r\nBoone, Matthew, Rocío Joo, and Mathieu Basille. 2023. sftrack: Modern Classes for Tracking and Movement Data. https://mablab.org/sftrack/.\r\n\r\n\r\nBrooks, Mollie E., Kasper Kristensen, Koen J. van Benthem, Arni Magnusson, Casper W. Berg, Anders Nielsen, Hans J. Skaug, Martin Maechler, and Benjamin M. Bolker. 2017. “glmmTMB Balances Speed and Flexibility Among Packages for Zero-Inflated Generalized Linear Mixed Modeling.” The R Journal 9 (2): 378–400. https://doi.org/10.32614/RJ-2017-066.\r\n\r\n\r\nCalenge, Clement. 2024a. adehabitatHR: Home Range Estimation. https://github.com/clementcalenge/adehabitathr.\r\n\r\n\r\n———. 2024b. adehabitatHS: Analysis of Habitat Selection by Animals. https://github.com/clementcalenge/adehabitaths.\r\n\r\n\r\n———. 2024c. adehabitatLT: Analysis of Animal Movements. https://github.com/clementcalenge/adehabitatlt.\r\n\r\n\r\n———. 2024d. adehabitatMA: Tools to Deal with Raster Maps. https://github.com/clementcalenge/adehabitatma.\r\n\r\n\r\nCameron, Allan, and Teun van den Brand. 2022. Geomtextpath: Use Curved Text in Ggplot2. https://allancameron.github.io/geomtextpath/.\r\n\r\n\r\nCarroll, Jonathan, Alicia Schep, and Jonathan Sidi. 2024. Ggeasy: Easy Access to ’Ggplot2’ Commands. https://CRAN.R-project.org/package=ggeasy.\r\n\r\n\r\nChang, Winston, Joe Cheng, JJ Allaire, Carson Sievert, Barret Schloerke, Yihui Xie, Jeff Allen, Jonathan McPherson, Alan Dipert, and Barbara Borges. 2024. Shiny: Web Application Framework for r. https://CRAN.R-project.org/package=shiny.\r\n\r\n\r\nCheng, Joe, Barret Schloerke, Bhaskar Karambelkar, and Yihui Xie. 2024. Leaflet: Create Interactive Web Maps with the JavaScript ’Leaflet’ Library. https://CRAN.R-project.org/package=leaflet.\r\n\r\n\r\nde Vries, Pepijn. 2024. Ggsankeyfier: Create Sankey and Alluvial Diagrams Using ’Ggplot2’. https://CRAN.R-project.org/package=ggsankeyfier.\r\n\r\n\r\nDubroca, Laurent, and Andréa Thiebault. 2017. M2b: Movement to Behaviour Inference Using Random Forest. https://github.com/ldbk/m2b.\r\n\r\n\r\nFC, Mike, Trevor L. Davis, and ggplot2 authors. 2025. Ggpattern: ’Ggplot2’ Pattern Geoms. https://github.com/trevorld/ggpattern.\r\n\r\n\r\nFlavio, Hugo, and Henrik Baktoft. 2021. “actel: Standardised Analysis of Acoustic Telemetry Data from Animals Moving Through Receiver Arrays.” Methods in Ecology and Evolution 12 (1): 196–203. https://doi.org/10.1111/2041-210X.13503.\r\n\r\n\r\nFoster, Scott D. 2024. fishMod: Fits Poisson-Sum-of-Gammas GLMs, Tweedie GLMs, and Delta Log-Normal Models. https://CRAN.R-project.org/package=fishMod.\r\n\r\n\r\nGohel, David, and Panagiotis Skintzos. 2024. Ggiraph: Make ’Ggplot2’ Graphics Interactive. https://davidgohel.github.io/ggiraph/.\r\n\r\n\r\nGrolemund, Garrett, and Hadley Wickham. 2011. “Dates and Times Made Easy with lubridate.” Journal of Statistical Software 40 (3): 1–25. https://www.jstatsoft.org/v40/i03/.\r\n\r\n\r\nHarrison, Lisa-Marie K, Martin J Cox, Georg Skaret, and Robert Harcourt. 2015. “The r Package EchoviewR for Automated Processing of Active Acoustic Data Using Echoview.” Frontiers in Marine Science 2 (15). https://doi.org/10.3389/fmars.2015.00015.\r\n\r\n\r\nHartig, Florian. 2024. DHARMa: Residual Diagnostics for Hierarchical (Multi-Level / Mixed) Regression Models. https://CRAN.R-project.org/package=DHARMa.\r\n\r\n\r\nHocking, Toby Dylan. 2025. Directlabels: Direct Labels for Multicolor Plots. https://github.com/tdhock/directlabels.\r\n\r\n\r\nHvitfeldt, Emil. 2021. Paletteer: Comprehensive Collection of Color Palettes. https://github.com/EmilHvitfeldt/paletteer.\r\n\r\n\r\nJ, Lemon. 2006. “Plotrix: A Package in the Red Light District of r.” R-News 6 (4): 8–12.\r\n\r\n\r\nLe Pennec, Erwan, and Kamil Slowikowski. 2024. Ggwordcloud: A Word Cloud Geom for ’Ggplot2’. https://github.com/lepennec/ggwordcloud.\r\n\r\n\r\nLenth, Russell V. 2024. Emmeans: Estimated Marginal Means, Aka Least-Squares Means. https://CRAN.R-project.org/package=emmeans.\r\n\r\n\r\nLin, Y-J., W-N. Tzeng, Y-S. Han, and Ruben H. Roa-Ureta. 2017. “A Stock Assessment Model for Transit Stock Fisheries with Explicit Immigration and Emigration Dynamics: Application to Upstream Waves of Glass Eels.” Fisheries Research 195: 130–40. http://dx.doi.org/10.1016/j.fishres.2017.07.009.\r\n\r\n\r\nLong, Jed, Trisalyn Nelson, Stephen Webb, and Kenneth Gee. 2014. “A Critical Examination of Indices of Dynamic Interaction for Wildlife Telemetry Data.” Journal of Animal Ecology 83: 1216–33.\r\n\r\n\r\nLong, Jed, Stephen Webb, Seth Harju, and Kenneth Gee. 2022. “Analyzing Contacts and Behavior from High Frequency Tracking Data Using the wildlifeDI r Package.” Geographical Analysis 54: 648–63.\r\n\r\n\r\nMazerolle, Marc J. 2023. AICcmodavg: Model Selection and Multimodel Inference Based on (q)AIC(c). https://cran.r-project.org/package=AICcmodavg.\r\n\r\n\r\nMeyer, Fanny, and Victor Perrier. 2025. Esquisse: Explore and Visualize Your Data Interactively. https://dreamrs.github.io/esquisse/.\r\n\r\n\r\nMorgan-Wall, Tyler. 2025. Rayshader: Create Maps and Visualize Data in 2D and 3D. https://www.rayshader.com.\r\n\r\n\r\nMüller, Kirill, and Hadley Wickham. 2023. Tibble: Simple Data Frames. https://CRAN.R-project.org/package=tibble.\r\n\r\n\r\nOgle, Derek H. 2023. RFishBC: Back-Calculation of Fish Length. https://fishr-core-team.github.io/RFishBC/.\r\n\r\n\r\nOgle, Derek H., Jason C. Doll, A. Powell Wheeler, and Alexis Dinno. 2025. FSA: Simple Fisheries Stock Assessment Methods. https://fishr-core-team.github.io/FSA/.\r\n\r\n\r\nPatil, Indrajeet. 2021. “Visualizations with statistical details: The ’ggstatsplot’ approach.” Journal of Open Source Software 6 (61): 3167. https://doi.org/10.21105/joss.03167.\r\n\r\n\r\nPebesma, Edzer, and Roger Bivand. 2023. Spatial Data Science: With applications in R. Chapman and Hall/CRC. https://doi.org/10.1201/9780429459016.\r\n\r\n\r\nPedersen, Thomas Lin. 2024a. Ggforce: Accelerating ’Ggplot2’. https://ggforce.data-imaginist.com.\r\n\r\n\r\n———. 2024b. Ggraph: An Implementation of Grammar of Graphics for Graphs and Networks. https://ggraph.data-imaginist.com.\r\n\r\n\r\n———. 2024c. Patchwork: The Composer of Plots. https://CRAN.R-project.org/package=patchwork.\r\n\r\n\r\nPedersen, Thomas Lin, and David Robinson. 2024. Gganimate: A Grammar of Animated Graphics. https://gganimate.com.\r\n\r\n\r\nQiu, Yixuan. 2024. Showtext: Using Fonts More Easily in r Graphs. https://CRAN.R-project.org/package=showtext.\r\n\r\n\r\nQuaglietta, Lorenzo, and Miguel Porto. 2024. SiMRiv: Individual-Based, Spatially-Explicit Simulation and Analysis of Multi-State Movements in River Networks and Heterogeneous Landscapes. https://CRAN.R-project.org/package=SiMRiv.\r\n\r\n\r\nR. A. Rigby, and D. M. Stasinopoulos. 2005. “Generalized Additive Models for Location, Scale and Shape,(with Discussion).” Applied Statistics 54.3: 507–54.\r\n\r\n\r\nRichard A. Becker, Original S code by, and Allan R. Wilks. R version by Ray Brownrigg. 2022. Mapdata: Extra Map Databases. https://CRAN.R-project.org/package=mapdata.\r\n\r\n\r\nRichard A. Becker, Original S code by, Allan R. Wilks. R version by Ray Brownrigg. Enhancements by Thomas P Minka, and Alex Deckmyn. 2024. Maps: Draw Geographical Maps. https://CRAN.R-project.org/package=maps.\r\n\r\n\r\nRoa-Ureta, Ruben H. 2011. “Modeling in-Season Pulses of Recruitment and Hyperstability-Hyperdepletion in the Loligo Gahi Fishery of the Falkland Islands with Generalized Depletion Models.” ICES Journal of Marine Science 69 (8): 1403–15. https://doi.org/10.1093/icesjms/fss110.\r\n\r\n\r\n———. 2015. “Stock Assessment of the Spanish Mackerel (Scomberomorus Commerson) in Saudi Waters of the Arabian Gulf with Generalized Depletion Models Under Data-Limited Conditions.” Fisheries Research 171 (Special Issue): 68–77. http://dx.doi.org/10.1016/j.fishres.2014.08.014.\r\n\r\n\r\nRoa-Ureta, Ruben H., C. Molinet, N. Bahamonde, and P. Araya. 2015. “Hierarchical Statistical Framework to Combine Generalized Depletion Models and Biomass Dynamic Models in the Stock Assessment of the Chilean Sea Urchin (Loxechinus Albus) Fishery.” Fisheries Research 171 (Special Issue): 59–67. http://dx.doi.org/10.1016/j.fishres.2014.12.006.\r\n\r\n\r\nRudis, Bob. 2024. Hrbrthemes: Additional Themes, Theme Components and Utilities for ’Ggplot2’. https://CRAN.R-project.org/package=hrbrthemes.\r\n\r\n\r\nSchiettekatte, Nina M. D., Simon J. Brandl, and Jordan M. Casey. 2022. Fishualize: Color Palettes Based on Fish Species. https://CRAN.R-project.org/package=fishualize.\r\n\r\n\r\nShuangbin Xu, Meijun Chen, Tingze Feng, Li Zhan, Lang Zhou, and Guangchuang Yu. 2021. “Use Ggbreak to Effectively Utilize Plotting Space to Deal with Large Datasets and Outliers.” Frontiers in Genetics 12: 774846. https://doi.org/10.3389/fgene.2021.774846.\r\n\r\n\r\nSigner, Johannes, John Fieberg, and Tal Avgar. 2019. “Animal Movement Tools (Amt): R Package for Managing Tracking Data and Conducting Habitat Selection Analyses.” Ecology and Evolution 9: 880–90.\r\n\r\n\r\nSjoberg, Daniel D., Karissa Whiting, Michael Curry, Jessica A. Lavery, and Joseph Larmarange. 2021. “Reproducible Summary Tables with the Gtsummary Package.” The R Journal 13: 570–80. https://doi.org/10.32614/RJ-2021-053.\r\n\r\n\r\nSjoberg, David. 2020. Ggbump: Bump Chart and Sigmoid Curves. https://CRAN.R-project.org/package=ggbump.\r\n\r\n\r\nSlowikowski, Kamil. 2024. Ggrepel: Automatically Position Non-Overlapping Text Labels with ’Ggplot2’.\r\n\r\n\r\nSmart, Jonathan. 2023. BayesGrowth: Estimate Fish Growth Using MCMC Analysis. https://github.com/jonathansmart/BayesGrowth.\r\n\r\n\r\nSmart, Jonathan, and Gretchen Grammer. 2021. “Modernising Fish and Shark Growth Curves with Bayesian Length-at-Age Models.” PLOS ONE 16 (2): e0246734. https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0246734.\r\n\r\n\r\nSoetaert, Karline. 2024. plot3D: Plotting Multi-Dimensional Data. https://CRAN.R-project.org/package=plot3D.\r\n\r\n\r\nSolymos, Peter, and Zygmunt Zawadzki. 2023. Pbapply: Adding Progress Bar to Apply Functions. https://CRAN.R-project.org/package=pbapply.\r\n\r\n\r\nTennekes, Martijn. 2018. “tmap: Thematic Maps in R.” Journal of Statistical Software 84 (6): 1–39. https://doi.org/10.18637/jss.v084.i06.\r\n\r\n\r\nVarghese, Eldho, Sathianandan T V, and Jayasankar J. 2020. FESta: Fishing Effort Standardisation. https://CRAN.R-project.org/package=FESta.\r\n\r\n\r\nVihtakari, Mikko. 2024. ggFishPlots: Visualise and Calculate Life History Parameters for Fisheries Science Using ’Ggplot2’. https://deepwaterimr.github.io/ggFishPlots/.\r\n\r\n\r\nWickham, Hadley. 2016. Ggplot2: Elegant Graphics for Data Analysis. Springer-Verlag New York. https://ggplot2.tidyverse.org.\r\n\r\n\r\n———. 2023a. Forcats: Tools for Working with Categorical Variables (Factors). https://CRAN.R-project.org/package=forcats.\r\n\r\n\r\n———. 2023b. Stringr: Simple, Consistent Wrappers for Common String Operations. https://CRAN.R-project.org/package=stringr.\r\n\r\n\r\nWickham, Hadley, Mara Averick, Jennifer Bryan, Winston Chang, Lucy DAgostino McGowan, Romain François, Garrett Grolemund, et al. 2019. “Welcome to the tidyverse.” Journal of Open Source Software 4 (43): 1686. https://doi.org/10.21105/joss.01686.\r\n\r\n\r\nWickham, Hadley, Romain François, Lionel Henry, Kirill Müller, and Davis Vaughan. 2023. Dplyr: A Grammar of Data Manipulation. https://CRAN.R-project.org/package=dplyr.\r\n\r\n\r\nWickham, Hadley, and Lionel Henry. 2023. Purrr: Functional Programming Tools. https://CRAN.R-project.org/package=purrr.\r\n\r\n\r\nWickham, Hadley, Jim Hester, and Jennifer Bryan. 2024. Readr: Read Rectangular Text Data. https://CRAN.R-project.org/package=readr.\r\n\r\n\r\nWickham, Hadley, Davis Vaughan, and Maximilian Girlich. 2024. Tidyr: Tidy Messy Data. https://CRAN.R-project.org/package=tidyr.\r\n\r\n\r\nWilke, Claus O., and Brenton M. Wiernik. 2025. Ggtext: Improved Text Rendering Support for ’Ggplot2’. https://github.com/wilkelab/ggtext.\r\n\r\n\r\nXie, Yihui. 2019. “TinyTeX: A Lightweight, Cross-Platform, and Easy-to-Maintain LaTeX Distribution Based on TeX Live.” TUGboat 40 (1): 30–32. https://tug.org/TUGboat/Contents/contents40-1.html.\r\n\r\n\r\n———. 2024. Tinytex: Helper Functions to Install and Maintain TeX Live, and Compile LaTeX Documents. https://github.com/rstudio/tinytex.\r\n\r\n\r\nXie, Yihui, Joe Cheng, and Xianying Tan. 2024. DT: A Wrapper of the JavaScript Library ’DataTables’. https://CRAN.R-project.org/package=DT.\r\n\r\n\r\nYutani, Hiroaki. 2024. Gghighlight: Highlight Lines and Points in ’Ggplot2’. https://yutannihilation.github.io/gghighlight/.\r\n\r\n\r\n\r\n\r\n",
      "last_modified": "2025-03-12T14:09:23-05:00"
    }
  ],
  "collections": []
}
